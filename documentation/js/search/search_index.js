var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.096,1,0.405]],["body/components/AppComponent.html",[0,0.169,1,0.748,2,1.014,3,0.528,4,0.444,5,0.927,6,0.927,7,0.927,8,0.927,9,0.444,10,2.967,11,0.927,12,1.453,13,0.832,14,3.132,15,1.153,16,4.943,17,1.153,18,4.541,19,0.528,20,1.014,21,2.288,22,0.528,23,0.046,24,0.927,25,1.498,26,1.498,27,3.132,28,3.132,29,0.815,30,3.65,31,0.528,32,0.444,33,0.528,34,0.528,35,0.927,36,1.153,37,1.153,38,0.927,39,1.313,40,0.927,41,0.767,42,0.927,43,0.528,44,0.528,45,1.313,46,0.528,47,0.617,48,0.712,49,1.255,50,0.528,51,0.528,52,0.528,53,0.528,54,0.528,55,0.927,56,0.528,57,0.815,58,0.528,59,0.495,60,0.528,61,0.528,62,0.927,63,0.528,64,0.712,65,0.528,66,0.712,67,0.815,68,0.927,69,0.927,70,0.037,71,0.037]],["title/modules/AppModule.html",[72,1.298,73,1.675]],["body/modules/AppModule.html",[0,0.147,1,0.789,3,0.393,4,0.331,9,0.331,13,0.393,23,0.048,31,0.836,32,0.331,33,0.393,34,0.393,43,0.723,44,0.393,46,0.723,47,0.46,48,0.731,50,0.723,51,0.393,52,0.723,53,0.393,54,0.754,56,0.723,57,0.608,58,0.723,59,0.429,60,0.541,61,0.723,63,0.723,64,0.731,65,0.741,66,0.836,70,0.03,71,0.03,73,3.446,74,1.426,75,2.238,76,2.212,77,2.212,78,2.212,79,2.212,80,2.62,81,3.044,82,2.212,83,1.626,84,2.721,85,3.745,86,3.044,87,3.044,88,3.044,89,3.745,90,3.044,91,1.876,92,3.745,93,1.876,94,2.721,95,2.721,96,3.745,97,2.721,98,2.212,99,2.238,100,1.259,101,3.745,102,2.721,103,3.745,104,2.721,105,3.745,106,2.721,107,3.745,108,2.721,109,2.721,110,3.745,111,0.782,112,3.745,113,1.117,114,1.117,115,3.745,116,2.721,117,3.745,118,2.721,119,3.745,120,2.721,121,3.745,122,2.721,123,3.745,124,2.721,125,3.745,126,2.212,127,2.212,128,2.721,129,2.721,130,3.745,131,2.212,132,1.963,133,2.953,134,1.876,135,3.182,136,1.876,137,2.721,138,1.426,139,1.426,140,1.426,141,1.876,142,2.721,143,2.721,144,1.626,145,1.117,146,2.721,147,4.614,148,1.117,149,1.626,150,2.721,151,2.721,152,2.721,153,2.721,154,2.721]],["title/modules/AppRoutingModule.html",[72,1.298,80,1.469]],["body/modules/AppRoutingModule.html",[3,0.622,4,0.524,9,0.524,23,0.047,31,0.725,32,0.524,33,0.622,34,0.622,70,0.04,71,0.04,74,2.256,80,2.628,86,3.499,88,4.077,98,4.077,99,3.171,100,1.993,145,1.767,155,4.305,156,4.305,157,4.305,158,4.305]],["title/components/DirectorCardComponent.html",[0,0.096,43,0.405]],["body/components/DirectorCardComponent.html",[0,0.157,1,0.45,2,0.915,3,0.45,4,0.378,5,0.79,6,0.79,7,0.79,8,0.79,9,0.378,11,0.79,12,1.423,13,0.81,15,1.041,17,1.041,19,0.45,20,0.915,22,0.732,23,0.047,24,1.237,29,1.024,31,0.592,32,0.378,33,0.45,34,0.45,35,0.79,36,1.041,37,1.041,38,0.79,39,1.237,40,0.79,41,0.823,42,0.79,43,0.704,44,0.794,45,1.237,46,0.45,47,0.526,48,0.607,49,1.164,50,0.45,51,0.45,52,0.45,53,0.45,54,0.45,55,0.79,56,0.45,57,0.695,58,0.45,59,0.459,60,0.45,61,0.45,62,0.79,63,0.45,64,0.607,65,0.45,66,0.607,67,0.695,68,0.79,69,0.79,70,0.033,71,0.033,111,0.893,139,2.553,159,3.96,160,1.63,161,1.041,162,1.316,163,2.255,164,2.739,165,2.449,166,1.024,167,1.64,168,1.041,169,1.399,170,0.915,171,2.145,172,2.739,173,2.145,174,0.79,175,0.79,176,2.528,177,0.695,178,1.177,179,2.145,180,2.826,181,2.528,182,1.44,183,2.145,184,0.893,185,3.161,186,3.161,187,3.161,188,3.331,189,4.098,190,4.098,191,4.098,192,1.494,193,1.134,194,1.671,195,1.277,196,1.63,197,1.44,198,2.145,199,2.826]],["title/components/EditProfileFormComponent.html",[0,0.096,46,0.405]],["body/components/EditProfileFormComponent.html",[0,0.137,1,0.347,2,0.766,3,0.579,4,0.292,5,0.61,6,0.61,7,0.61,8,0.61,9,0.292,11,0.61,12,1.367,13,0.778,15,0.871,17,0.871,19,0.347,20,0.766,22,0.695,23,0.047,25,1.643,26,1.643,29,1.166,31,0.631,32,0.292,33,0.347,34,0.347,35,0.61,36,0.871,37,0.871,38,0.61,39,1.109,40,0.61,41,0.677,42,0.61,43,0.347,44,0.347,45,1.109,46,0.631,47,0.855,48,1.125,49,1.017,50,0.347,51,0.347,52,0.347,53,0.347,54,0.347,55,0.61,56,0.347,57,0.537,58,0.347,59,0.547,60,0.347,61,0.347,62,0.61,63,0.347,64,0.469,65,0.347,66,0.469,67,0.537,68,0.61,69,0.61,70,0.028,71,0.028,111,0.69,113,0.986,114,0.986,144,3.158,145,0.986,161,0.871,162,1.15,166,1.15,168,0.871,169,1.255,170,0.766,174,0.61,175,0.61,177,0.894,178,1.38,182,1.112,184,0.986,192,0.876,193,0.876,194,0.876,200,4.296,201,1.435,202,2.051,203,2.761,204,2.367,205,3.186,206,2.289,207,2.138,208,2.289,209,3.755,210,3.012,211,2.367,212,4.805,213,1.259,214,1.496,215,3.186,216,2.138,217,1.953,218,2.761,219,2.098,220,2.098,221,3.432,222,3.432,223,3.432,224,3.432,225,1.657,226,3.432,227,3.012,228,2.367,229,1.409,230,2.402,231,3.432,232,2.051,233,1.15,234,3.255,235,3.012,236,4.004,237,4.004,238,3.255,239,3.255,240,2.518,241,1.409,242,1.409,243,2.402,244,2.402,245,2.402,246,1.953,247,2.402,248,2.402,249,2.098,250,2.402,251,1.259,252,1.259,253,2.402,254,1.657,255,1.953,256,1.657,257,0.986,258,0.986,259,2.402,260,2.402,261,2.402,262,2.402,263,1.657,264,4.004,265,2.402,266,2.402,267,2.402,268,2.402,269,2.402,270,1.435,271,1.112,272,0.986,273,1.259,274,2.402,275,1.953,276,2.402,277,1.112,278,1.259,279,1.259,280,1.259]],["title/components/GenreCardComponent.html",[0,0.096,50,0.405]],["body/components/GenreCardComponent.html",[0,0.159,1,0.462,2,0.932,3,0.462,4,0.389,5,0.812,6,0.812,7,0.812,8,0.812,9,0.389,11,0.812,12,1.428,13,0.813,15,1.059,17,1.059,19,0.462,20,0.932,22,0.738,23,0.047,24,1.059,29,1.038,31,0.603,32,0.389,33,0.462,34,0.462,35,0.812,36,1.059,37,1.059,38,0.812,39,1.25,40,0.812,41,0.832,42,0.812,43,0.462,44,0.462,45,1.25,46,0.462,47,0.54,48,0.624,49,1.179,50,0.712,51,0.798,52,0.462,53,0.462,54,0.462,55,0.812,56,0.462,57,0.714,58,0.462,59,0.465,60,0.462,61,0.462,62,0.812,63,0.462,64,0.624,65,0.462,66,0.624,67,0.714,68,0.812,69,0.812,70,0.034,71,0.034,111,0.918,138,2.581,160,1.675,161,1.059,162,1.334,163,2.279,164,2.776,165,2.494,166,1.038,167,1.654,168,1.059,169,1.414,170,0.932,171,2.205,172,2.776,173,2.205,174,0.812,175,0.812,177,0.714,178,1.198,179,2.205,180,2.878,182,1.48,183,2.205,184,0.918,188,3.392,192,1.521,193,1.166,194,1.694,195,1.312,196,1.675,197,1.48,198,2.205,199,2.878,281,4.003,282,2.599,283,2.205,284,1.91,285,3.392]],["title/components/MovieCardComponent.html",[0,0.096,52,0.405]],["body/components/MovieCardComponent.html",[0,0.106,1,0.227,2,0.555,3,0.227,4,0.191,5,0.398,6,0.398,7,0.398,8,0.398,9,0.191,11,0.398,12,1.252,13,0.713,15,0.631,17,0.631,19,0.227,20,0.555,21,2.312,22,0.722,23,0.048,24,1.446,25,1.268,26,1.268,29,1.15,31,0.618,32,0.191,33,0.227,34,0.227,35,0.398,36,0.631,37,0.631,38,0.398,39,0.893,40,0.398,41,0.883,42,0.398,43,0.508,44,0.508,45,0.893,46,0.227,47,0.265,48,0.306,49,0.784,50,0.508,51,0.508,52,0.508,53,0.761,54,0.227,55,0.398,56,0.508,57,0.785,58,0.227,59,0.494,60,0.227,61,0.227,62,0.398,63,0.227,64,0.306,65,0.227,66,0.306,67,0.35,68,0.398,69,0.398,70,0.02,71,0.02,111,0.45,113,0.643,114,0.643,134,3.579,135,2.131,138,0.822,139,0.822,140,0.822,145,0.643,148,1.921,160,0.822,161,0.631,162,0.887,163,2.053,164,1.846,165,1.486,166,1.02,167,1.48,168,0.631,169,1.01,170,0.555,174,1.126,175,1.126,176,1.274,177,1.102,178,1.491,181,1.274,184,1.435,185,2.814,186,2.814,187,2.814,192,1.617,193,0.907,194,1.488,195,0.643,197,0.726,206,1.843,207,1.775,213,0.822,214,1.242,216,1.775,229,1.02,233,1.228,240,1.303,241,1.675,242,1.675,249,0.822,251,0.822,252,0.822,254,1.081,256,1.081,257,1.755,258,1.574,271,1.151,272,1.02,273,1.303,277,1.151,278,0.822,279,0.822,280,0.822,283,1.081,284,2.904,286,4.219,287,2.854,288,1.846,289,2.859,290,2.425,291,3.517,292,2.486,293,2.512,294,2.021,295,2.021,296,2.512,297,2.486,298,2.644,299,2.486,300,1.715,301,1.568,302,2.138,303,1.443,304,1.628,305,1.486,306,2.674,307,2.555,308,2.425,309,1.568,310,2.167,311,1.568,312,2.138,313,2.486,314,1.568,315,2.021,316,2.486,317,2.021,318,2.021,319,1.568,320,1.274,321,1.568,322,2.814,323,2.325,324,2.021,325,1.568,326,2.021,327,1.568,328,2.021,329,1.568,330,2.021,331,2.486,332,1.568,333,2.486,334,2.486,335,2.425,336,2.486,337,1.568,338,1.568,339,1.568,340,2.512,341,1.081,342,1.568,343,2.486,344,1.568,345,1.568,346,1.274,347,1.568,348,1.274,349,2.555,350,2.859,351,1.274,352,1.274,353,1.568,354,1.568,355,1.568,356,1.715,357,2.021,358,1.081,359,1.274,360,1.274,361,1.081,362,0.937,363,1.568,364,1.568,365,1.568,366,1.568,367,3.517,368,1.568,369,2.021,370,2.486,371,2.486,372,1.846,373,1.846,374,2.021,375,1.715,376,1.486,377,2.101,378,2.101,379,1.486,380,1.486,381,1.081,382,1.715,383,1.486,384,1.486,385,2.425,386,1.274,387,1.486,388,1.486,389,1.568,390,1.274,391,1.274,392,1.274,393,1.274,394,2.859,395,2.021,396,2.021,397,1.274,398,2.021,399,1.274,400,1.081,401,0.937,402,1.081,403,1.081,404,1.081,405,1.715,406,1.274,407,1.274,408,0.937,409,2.021,410,1.274,411,1.274,412,1.081]],["title/components/NavigationComponent.html",[0,0.096,54,0.405]],["body/components/NavigationComponent.html",[0,0.143,1,0.374,2,0.807,3,0.374,4,0.314,5,0.656,6,0.656,7,0.656,8,0.656,9,0.314,11,0.656,12,1.384,13,0.788,15,0.918,17,0.918,19,0.374,20,0.807,22,0.602,23,0.047,29,1.061,31,0.602,32,0.314,33,0.374,34,0.374,35,0.656,36,0.918,37,0.918,38,0.656,39,1.146,40,0.656,41,0.704,42,0.656,43,0.374,44,0.374,45,1.146,46,0.374,47,0.437,48,0.927,49,1.058,50,0.374,51,0.374,52,0.374,53,0.602,54,0.652,55,0.656,56,0.374,57,0.577,58,0.374,59,0.475,60,0.374,61,0.374,62,0.656,63,0.374,64,0.504,65,0.374,66,0.813,67,0.931,68,0.656,69,0.656,70,0.029,71,0.029,83,3.018,100,1.196,113,1.061,114,1.061,148,1.852,161,0.918,162,1.197,166,1.061,168,0.918,169,1.296,170,0.577,174,0.656,175,0.656,177,0.807,178,1.296,192,1.645,193,1.731,194,1.909,195,1.852,207,2.089,216,2.198,235,2.492,270,1.544,271,1.196,272,1.483,275,2.101,277,1.196,278,2.489,279,2.489,280,2.489,306,1.894,349,2.49,356,3.112,372,2.159,373,1.544,376,1.544,377,1.544,378,2.838,379,2.159,380,1.544,381,2.492,382,1.782,383,1.544,384,1.544,385,2.492,387,1.544,388,1.544,401,1.544,403,1.782,408,2.159,409,2.101,412,2.492,413,2.101,414,3.614,415,4.167,416,3.614,417,3.658,418,4.512,419,2.584,420,2.584,421,2.584,422,2.584,423,2.579,424,2.159,425,3.614,426,3.614,427,3.614,428,2.101,429,2.101,430,2.584,431,2.101,432,2.584,433,2.584,434,5.051,435,2.938,436,3.614,437,3.614,438,3.614,439,3.614,440,2.101,441,2.584,442,2.584,443,2.584,444,2.584,445,2.584,446,2.584,447,2.584,448,2.584,449,2.584,450,2.584,451,2.584,452,2.938,453,2.584,454,4.512,455,2.938,456,2.938,457,2.584,458,2.584,459,2.584,460,2.584,461,2.584,462,1.782,463,2.101,464,1.782,465,1.782,466,2.584,467,2.101,468,3.387,469,2.584,470,2.101,471,2.101]],["title/components/SynopsisCardComponent.html",[0,0.096,56,0.405]],["body/components/SynopsisCardComponent.html",[0,0.159,1,0.462,2,0.932,3,0.462,4,0.389,5,0.812,6,0.812,7,0.812,8,0.812,9,0.389,11,0.812,12,1.428,13,0.813,15,1.059,17,1.059,19,0.462,20,0.932,21,2.15,22,0.738,23,0.047,24,1.059,29,1.038,31,0.603,32,0.389,33,0.462,34,0.462,35,0.812,36,1.059,37,1.059,38,0.812,39,1.25,40,0.812,41,0.785,42,0.812,43,0.462,44,0.462,45,1.25,46,0.462,47,0.54,48,0.624,49,1.179,50,0.462,51,0.462,52,0.462,53,0.462,54,0.462,55,0.812,56,0.712,57,1.209,58,0.462,59,0.465,60,0.462,61,0.462,62,0.812,63,0.462,64,0.624,65,0.462,66,0.624,67,0.714,68,0.812,69,0.812,70,0.034,71,0.034,111,0.918,140,2.581,160,1.675,161,1.059,162,1.334,163,2.279,164,2.776,165,2.494,166,1.038,167,1.654,168,1.059,169,1.414,170,0.932,171,2.205,172,2.776,173,2.205,174,0.812,175,0.812,177,0.714,178,1.198,179,2.205,180,2.878,182,1.48,183,2.205,184,0.918,192,1.521,193,1.166,194,1.694,195,1.312,196,1.675,197,1.48,198,2.205,199,2.878,282,2.599,283,2.205,284,1.91,285,3.392,472,4.003,473,4.173]],["title/interfaces/User.html",[59,0.281,474,1.469]],["body/interfaces/User.html",[3,0.275,4,0.231,9,0.231,13,0.275,14,1.312,19,0.275,20,0.645,21,1.617,22,0.607,23,0.048,24,1.23,31,0.607,32,0.231,33,0.418,34,0.418,41,0.709,44,0.275,47,0.321,51,0.418,53,0.607,59,0.442,60,0.275,70,0.023,71,0.023,72,0.88,93,1.312,145,2.136,148,1.989,149,2.743,166,0.645,167,1.431,170,0.425,177,1.137,182,0.88,184,1.495,208,2.45,214,0.616,219,2.045,220,2.045,229,1.601,232,1.727,233,1.508,240,1.514,241,2.061,242,2.061,249,1.514,257,1.601,258,2.155,288,2.332,300,1.312,303,2.09,304,2.356,305,1.137,306,2.199,307,2.332,308,2.691,310,2.324,312,2.668,335,2.893,341,1.993,362,1.137,423,0.997,424,1.137,474,0.997,475,1.902,476,1.137,477,1.137,478,3.172,479,2.409,480,1.514,481,1.546,482,2.349,483,3.172,484,4.082,485,2.349,486,4.187,487,1.546,488,1.312,489,1.546,490,1.546,491,1.546,492,2.349,493,1.312,494,1.137,495,1.312,496,1.312,497,1.546,498,1.546,499,1.546,500,1.546,501,1.312,502,1.312,503,4.187,504,2.349,505,1.546,506,1.137,507,2.668,508,1.312,509,3.732,510,1.546,511,2.349,512,2.349,513,2.349,514,1.546,515,4.407,516,4.016,517,3.591,518,4.016,519,4.016,520,4.016,521,4.016,522,4.016,523,1.546,524,1.546,525,1.546,526,1.546,527,1.546,528,1.546,529,1.546,530,1.546,531,1.546,532,1.546,533,2.84,534,1.546,535,1.546,536,2.349,537,1.546,538,1.546,539,2.409,540,1.993,541,1.546,542,2.349,543,1.546,544,1.546,545,1.546,546,2.349,547,1.546,548,2.349,549,1.546,550,1.993,551,1.546,552,2.84,553,1.546,554,3.172,555,1.546,556,2.349,557,1.546,558,1.546,559,1.546,560,1.546,561,1.546,562,1.546,563,1.312,564,1.546,565,1.546,566,1.546,567,1.546,568,1.546,569,1.546,570,1.546,571,1.546]],["title/components/UserLoginFormComponent.html",[0,0.096,58,0.405]],["body/components/UserLoginFormComponent.html",[0,0.143,1,0.376,2,0.81,3,0.376,4,0.316,5,0.66,6,0.66,7,0.66,8,0.66,9,0.316,11,0.66,12,1.385,13,0.789,15,0.921,17,0.921,19,0.376,20,0.81,22,0.688,23,0.047,24,0.921,25,1.066,26,1.066,29,1.13,31,0.688,32,0.316,33,0.376,34,0.376,35,0.66,36,0.921,37,0.921,38,0.66,39,1.148,40,0.66,41,0.706,42,0.66,43,0.376,44,0.376,45,1.148,46,0.376,47,0.439,48,0.507,49,1.061,50,0.376,51,0.376,52,0.376,53,0.376,54,0.376,55,0.66,56,0.376,57,0.58,58,0.654,59,0.542,60,0.827,61,0.376,62,0.66,63,0.376,64,0.507,65,0.376,66,0.507,67,0.58,68,0.66,69,0.66,70,0.029,71,0.029,100,1.202,111,0.746,113,1.066,114,1.066,132,2.704,161,0.921,162,1.2,166,1.171,167,1.596,168,0.921,169,1.299,170,0.81,174,0.66,175,0.66,177,0.81,178,1.299,184,0.746,201,1.552,202,2.167,203,2.882,204,2.501,205,3.281,206,2.37,207,2.202,208,1.934,211,2.501,213,1.361,214,1.541,215,3.281,216,2.202,218,2.882,225,1.791,227,3.399,228,2.501,229,1.066,233,1.2,235,2.501,241,1.489,242,1.489,251,1.361,252,1.361,257,1.066,258,1.066,263,1.791,270,1.552,271,1.679,272,1.489,273,1.901,302,1.901,303,1.489,304,1.679,310,2.093,361,1.791,417,3.488,423,2.37,431,2.112,550,1.791,572,3.083,573,4.523,574,4.928,575,3.627,576,3.627,577,2.598,578,2.948,579,3.627,580,2.598,581,2.598,582,2.598,583,2.112,584,2.598,585,2.948,586,2.112,587,2.598,588,2.598,589,2.598,590,2.598,591,2.112,592,2.112,593,2.598,594,2.598,595,2.598,596,2.112]],["title/components/UserProfileComponent.html",[0,0.096,61,0.405]],["body/components/UserProfileComponent.html",[0,0.1,1,0.208,2,0.519,3,0.208,4,0.175,5,0.366,6,0.366,7,0.366,8,0.366,9,0.175,11,0.366,12,1.226,13,0.698,15,0.59,17,0.59,19,0.208,20,0.519,21,2.2,22,0.674,23,0.048,24,1.413,25,1.2,26,1.2,29,1.131,31,0.642,32,0.175,33,0.208,34,0.208,35,0.366,36,0.59,37,0.59,38,0.366,39,0.851,40,0.366,41,0.847,42,0.366,43,0.485,44,0.485,45,0.851,46,0.423,47,0.727,48,0.943,49,0.742,50,0.485,51,0.485,52,0.208,53,0.208,54,0.208,55,0.366,56,0.485,57,0.749,58,0.208,59,0.538,60,0.208,61,0.485,62,0.366,63,0.208,64,0.281,65,0.208,66,0.281,67,0.322,68,0.366,69,0.366,70,0.019,71,0.019,72,0.668,100,0.668,111,0.414,113,0.592,114,0.592,133,0.994,135,2.016,138,0.756,139,0.756,140,0.756,141,3.523,144,0.862,145,0.955,148,0.955,161,0.59,162,0.839,163,1.82,166,1.062,167,1.439,168,0.59,169,0.963,170,0.519,174,0.934,175,0.934,177,1.019,178,1.467,184,1.365,185,2.712,186,2.712,187,2.712,192,1.569,193,1.569,194,1.891,195,1.614,196,0.756,197,1.077,206,1.757,207,1.702,208,1.915,210,0.994,213,0.756,214,1.191,216,1.702,219,1.757,220,1.219,232,1.39,233,1.188,240,1.219,241,1.376,242,1.376,249,1.757,251,0.756,252,0.756,254,1.604,255,1.172,256,0.994,257,1.2,258,1.2,271,1.077,272,1.376,273,1.219,277,0.668,278,1.928,279,1.928,280,1.928,284,2.84,287,2.886,288,1.39,290,2.312,293,2.376,294,1.891,295,1.891,296,1.891,298,2.536,302,1.219,303,1.614,304,1.82,306,1.928,307,1.39,310,2.159,312,1.757,320,1.172,322,2.968,323,2.391,324,1.891,326,1.891,328,1.891,330,3.362,340,1.172,346,1.172,348,1.172,349,2.572,350,2.726,351,1.172,352,1.172,356,1.604,357,1.172,358,0.994,359,1.172,360,1.172,361,0.994,362,1.39,369,1.891,372,2.198,373,2.35,374,1.891,375,2.536,376,2.472,377,2.472,378,2.726,379,2.472,380,2.004,381,2.312,382,0.994,383,1.747,384,1.747,385,2.312,386,1.172,387,2.198,388,2.198,390,1.172,391,1.172,392,1.172,393,1.172,394,2.376,395,1.172,396,1.172,397,1.172,398,1.891,399,1.172,400,0.994,401,1.39,403,1.604,404,2.536,405,3.146,406,1.172,407,1.172,408,1.39,410,1.891,411,2.726,412,2.536,417,3.146,424,1.39,429,1.172,435,1.891,455,1.172,456,1.891,462,1.604,463,1.891,464,1.604,465,1.604,470,1.172,471,1.172,479,1.604,539,2.312,540,1.604,572,3.052,597,1.172,598,2.923,599,2.326,600,2.923,601,2.99,602,3.353,603,3.353,604,2.326,605,1.442,606,1.442,607,1.442,608,1.442,609,1.442,610,1.442,611,1.442,612,1.442,613,1.442,614,1.442,615,1.442,616,1.442,617,1.442,618,1.442,619,1.442,620,1.442,621,1.442,622,2.326,623,1.442,624,1.442,625,1.442,626,1.442,627,1.442,628,1.172,629,2.326,630,2.326,631,2.326,632,2.326,633,2.326,634,2.326,635,2.326,636,1.172,637,1.172,638,1.442,639,2.326,640,1.442,641,2.326,642,1.442,643,1.172,644,1.172,645,1.891,646,2.326,647,3.932,648,1.442,649,1.442,650,1.891,651,1.442]],["title/components/UserRegistrationFormComponent.html",[0,0.096,63,0.405]],["body/components/UserRegistrationFormComponent.html",[0,0.142,1,0.369,2,0.8,3,0.369,4,0.31,5,0.648,6,0.648,7,0.648,8,0.648,9,0.31,11,0.648,12,1.381,13,0.786,15,0.909,17,0.909,19,0.369,20,0.8,22,0.683,23,0.047,24,1.139,25,1.047,26,1.047,29,1.124,31,0.727,32,0.31,33,0.369,34,0.369,35,0.648,36,0.909,37,0.909,38,0.648,39,1.139,40,0.648,41,0.699,42,0.648,43,0.369,44,0.369,45,1.139,46,0.369,47,0.431,48,0.498,49,1.05,50,0.369,51,0.369,52,0.369,53,0.369,54,0.369,55,0.648,56,0.369,57,0.57,58,0.369,59,0.548,60,0.369,61,0.369,62,0.648,63,0.649,64,1.112,65,0.369,66,0.498,67,0.57,68,0.648,69,0.648,70,0.029,71,0.029,111,0.733,113,1.047,114,1.047,132,2.692,161,0.909,162,1.188,166,1.166,167,1.16,168,0.909,169,1.289,170,0.8,174,0.648,175,0.648,177,0.8,178,1.289,184,0.733,201,1.524,202,2.14,203,2.853,204,2.469,205,3.259,206,2.351,207,2.187,208,1.915,211,2.469,213,1.337,214,1.53,215,3.259,216,2.187,217,2.073,218,2.853,219,2.168,220,2.168,225,2.469,227,3.094,228,2.469,229,1.047,233,1.289,234,2.91,239,2.073,241,1.47,242,1.47,246,2.073,251,1.337,252,1.337,257,1.047,258,1.047,263,1.759,270,1.524,271,1.657,272,1.47,273,1.876,287,1.524,302,1.337,303,1.47,304,1.657,310,1.657,312,1.876,323,1.337,506,2.14,507,2.351,508,1.759,572,3.069,585,2.91,586,2.073,591,2.91,592,2.073,596,2.073,652,4.486,653,4.9,654,3.58,655,2.55,656,2.55,657,2.55,658,2.55,659,3.58,660,2.55,661,2.55,662,2.55,663,2.55,664,2.55,665,2.55,666,2.55,667,2.55,668,2.55,669,2.55,670,2.55,671,2.55,672,2.55,673,2.55,674,3.647,675,3.647]],["title/injectables/UserRegistrationService.html",[214,0.908,480,1.469]],["body/injectables/UserRegistrationService.html",[3,0.215,4,0.181,9,0.181,13,0.215,14,1.027,19,0.215,21,1.73,22,0.714,23,0.048,24,0.758,29,1.116,31,0.54,32,0.181,33,0.345,34,0.432,41,0.892,44,0.345,47,0.403,51,0.494,53,0.666,59,0.45,60,0.215,70,0.019,71,0.019,72,1.105,93,1.027,145,2.026,148,1.999,149,2.504,166,0.891,167,1.525,168,0.606,170,0.667,174,1.253,175,1.253,177,1.201,182,1.105,184,1.418,208,2.359,209,1.94,210,1.646,214,0.773,219,0.78,220,0.78,229,1.787,232,2.041,233,1.609,240,1.79,241,2.167,242,2.167,249,1.251,257,1.402,258,2.051,288,0.89,289,1.94,290,1.646,300,1.646,303,2.189,304,2.468,305,1.426,306,2.415,307,2.384,308,2.059,310,2.443,312,2.794,335,3.178,341,2.578,358,1.646,362,1.426,423,1.251,424,1.426,474,0.78,476,3.017,477,0.89,478,1.21,479,1.027,480,1.251,481,1.21,482,1.94,483,3.54,484,3.827,485,2.776,486,4.354,487,1.21,488,1.027,489,1.21,490,1.21,491,1.21,492,2.427,493,1.027,494,0.89,495,1.027,496,1.027,497,1.21,498,1.94,499,1.94,500,1.94,501,1.646,502,1.646,503,4.013,504,2.427,505,1.21,506,1.426,507,2.587,508,2.059,509,3.827,510,1.94,511,1.94,512,1.94,513,1.94,514,1.94,515,4.239,516,3.746,517,3.243,518,3.746,519,3.746,520,3.746,521,3.746,522,3.746,523,1.94,524,2.427,525,1.94,526,1.94,527,2.427,528,1.94,529,1.94,530,1.21,531,1.94,532,1.21,533,3.243,534,1.94,535,1.94,536,1.94,537,1.21,538,1.94,539,2.751,540,2.059,541,1.94,542,1.94,543,1.94,544,1.94,545,1.94,546,2.776,547,1.94,548,2.427,549,1.94,550,2.751,551,1.94,552,2.427,553,1.21,554,3.038,555,1.94,556,1.94,557,1.21,558,1.21,559,1.21,560,1.21,561,1.21,562,1.21,563,1.027,564,1.21,565,1.21,566,1.21,567,1.21,568,1.21,569,1.21,570,1.21,571,1.21,583,1.94,601,1.94,676,1.489,677,2.386,678,2.386,679,2.386,680,1.489,681,1.489,682,1.489,683,1.489,684,1.489,685,1.489,686,1.489,687,1.489,688,1.489,689,1.489,690,1.489,691,1.489,692,1.489,693,1.489,694,1.489,695,1.489]],["title/components/WelcomePageComponent.html",[0,0.096,65,0.405]],["body/components/WelcomePageComponent.html",[0,0.145,1,0.385,2,0.824,3,0.385,4,0.324,5,0.676,6,0.676,7,0.676,8,0.676,9,0.324,11,0.676,12,1.391,13,0.792,15,0.937,17,0.937,19,0.385,20,0.824,22,0.533,23,0.047,27,2.545,29,1.072,31,0.661,32,0.324,33,0.385,34,0.385,35,0.676,36,0.937,37,0.937,38,0.676,39,1.161,40,0.676,41,0.716,42,0.676,43,0.385,44,0.385,45,1.161,46,0.385,47,0.45,48,0.52,49,1.075,50,0.385,51,0.385,52,0.385,53,0.385,54,0.385,55,0.676,56,0.385,57,0.595,58,0.612,59,0.481,60,0.736,61,0.385,62,0.676,63,0.612,64,0.937,65,0.661,66,1.052,67,0.946,68,0.676,69,0.676,70,0.03,71,0.03,72,1.708,111,0.765,132,1.934,133,2.545,136,3.426,161,0.937,162,1.216,163,2.116,166,0.824,168,0.937,169,1.313,170,0.595,174,0.676,175,0.676,177,0.946,178,1.427,192,1.811,193,1.346,194,1.811,195,1.515,196,1.396,197,1.233,202,2.732,272,1.093,277,1.233,278,2.219,279,2.219,280,2.219,287,3.102,298,3.311,322,3.153,323,2.603,349,2.732,372,2.205,373,2.531,375,3.153,376,2.968,377,2.732,378,2.732,379,2.205,380,1.592,383,1.592,384,1.592,387,1.592,388,1.592,400,1.837,401,1.592,404,1.837,405,2.545,408,1.592,428,2.165,440,2.165,462,1.837,464,1.837,465,1.837,467,2.165,628,3,636,2.165,637,2.165,643,2.165,644,2.165,645,2.165,650,2.165,674,3,675,3,696,4.038,697,2.165,698,4.235,699,3.69,700,4.572,701,4.572,702,2.663,703,2.663,704,2.663,705,2.663,706,2.663,707,2.663,708,2.663,709,2.663,710,2.663,711,3.69,712,2.663,713,2.663,714,2.663,715,3.69,716,2.663]],["title/coverage.html",[717,3.107]],["body/coverage.html",[0,0.194,1,0.522,9,0.439,10,2.933,22,0.522,23,0.047,43,0.522,46,0.522,48,0.88,50,0.522,52,0.522,54,0.522,56,0.522,58,0.522,59,0.361,60,0.652,61,0.522,63,0.522,64,0.88,65,0.522,70,0.036,71,0.036,132,2.363,134,2.489,136,2.489,138,1.891,139,1.891,140,1.891,141,2.489,144,2.156,159,2.933,160,2.699,200,2.933,201,2.938,214,1.169,233,1.412,281,2.933,286,2.933,402,3.884,413,2.933,472,2.933,474,1.891,476,2.938,477,2.938,480,1.891,494,2.156,507,1.891,572,2.938,597,2.933,696,2.933,697,2.933,717,2.933,718,2.933,719,3.609,720,3.609,721,3.609,722,4.917,723,3.609,724,3.609,725,3.609,726,3.609,727,3.609,728,5.302,729,5.302,730,3.609,731,3.609,732,3.609,733,3.609,734,4.508,735,4.508,736,3.609,737,3.609,738,3.609,739,3.609,740,2.933,741,3.665,742,2.933,743,3.665,744,2.933,745,2.933,746,3.609,747,3.609]],["title/dependencies.html",[75,2.014,748,1.904]],["body/dependencies.html",[23,0.047,28,2.861,32,0.505,70,0.04,71,0.04,75,2.479,87,3.373,90,3.989,91,3.384,100,1.92,126,3.373,127,3.373,131,3.373,488,2.861,749,4.149,750,5.688,751,4.149,752,4.908,753,4.149,754,4.149,755,4.149,756,4.149,757,4.149,758,4.149,759,4.149,760,4.149,761,4.149,762,4.149,763,4.149,764,4.149,765,4.149,766,4.149,767,4.149]],["title/index.html",[19,0.339,578,1.904,768,2.343]],["body/index.html",[0,0.165,4,0.42,13,0.634,23,0.035,27,2.38,28,3.495,41,0.583,44,0.634,51,0.634,53,0.773,59,0.482,66,0.673,67,0.771,70,0.035,71,0.035,83,2.062,148,1.416,149,2.619,161,0.876,233,0.991,238,3.916,277,2.029,302,2.524,303,2.194,305,2.062,315,2.805,323,1.808,423,1.808,468,3.563,493,2.38,502,3.023,506,2.062,507,1.808,563,3.023,718,2.805,748,2.805,769,3.451,770,4.383,771,3.451,772,4.817,773,3.451,774,3.451,775,3.451,776,3.451,777,3.451,778,3.451,779,3.451,780,3.451,781,3.451,782,4.817,783,3.451,784,3.451,785,3.451,786,3.451,787,4.383,788,5.346,789,3.451,790,3.451,791,3.451,792,3.451,793,3.451,794,3.451,795,4.817,796,3.451,797,4.383,798,4.383,799,4.817,800,3.451,801,3.451,802,4.383,803,4.383,804,3.451,805,5.231,806,5.431,807,3.451,808,3.451,809,3.451,810,3.451,811,3.451,812,3.451,813,3.451,814,3.451,815,3.451,816,4.817,817,3.451,818,5.068,819,3.451,820,3.451,821,3.451,822,3.451,823,4.383,824,4.383,825,5.068,826,3.451,827,4.383,828,3.451,829,3.451,830,3.451,831,3.451,832,4.383,833,3.451,834,3.451,835,3.451,836,3.451,837,3.451,838,4.817,839,3.451,840,3.451,841,2.38,842,3.451]],["title/modules.html",[74,2.003]],["body/modules.html",[23,0.041,70,0.041,71,0.041,73,2.682,74,2.352,80,2.352,91,3.095,501,3.095,843,4.488,844,4.488,845,5.138,846,4.488]],["title/overview.html",[841,2.636]],["body/overview.html",[1,0.805,2,0.864,23,0.047,43,0.733,46,0.733,50,0.733,52,0.733,54,0.733,56,0.733,58,0.733,61,0.733,63,0.733,65,0.733,70,0.038,71,0.038,73,3.517,74,2.028,75,2.812,76,3.145,77,3.145,78,3.145,79,3.145,80,2.658,81,3.826,82,3.145,83,2.312,402,2.668,452,3.826,474,2.028,480,2.028,841,2.668,847,3.869,848,3.869]],["title/routes.html",[99,2.284]],["body/routes.html",[23,0.042,70,0.042,71,0.042,99,2.726]],["title/miscellaneous/variables.html",[849,1.904,850,2.74]],["body/miscellaneous/variables.html",[19,0.591,22,0.794,23,0.047,24,1.038,25,2.207,26,2.207,70,0.039,71,0.039,172,2.443,229,1.997,233,1.492,317,3.955,318,3.323,476,2.443,477,2.907,494,2.907,495,2.819,496,2.819,740,3.323,741,4.37,742,3.323,743,3.323,744,3.955,745,3.955,849,3.323,850,3.323,851,4.088,852,4.865,853,4.088,854,4.088,855,4.088,856,4.088,857,4.865]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":402,"title":{},"body":{"components/MovieCardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["0.11.4",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["0.22.11",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":645,"title":{},"body":{"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["0.4s",{"_index":466,"title":{},"body":{"components/NavigationComponent.html":{}}}],["0/1",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":452,"title":{},"body":{"components/NavigationComponent.html":{},"overview.html":{}}}],["1/6",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["100vw",{"_index":443,"title":{},"body":{"components/NavigationComponent.html":{}}}],["10px",{"_index":381,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["11",{"_index":848,"title":{},"body":{"overview.html":{}}}],["12px",{"_index":393,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["13.0.0",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["13.1.0",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["13.1.2",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["13.1.3",{"_index":774,"title":{},"body":{"index.html":{}}}],["14",{"_index":199,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["14/16",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["150px",{"_index":469,"title":{},"body":{"components/NavigationComponent.html":{}}}],["15px",{"_index":457,"title":{},"body":{"components/NavigationComponent.html":{}}}],["15vw",{"_index":716,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["16",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["166",{"_index":461,"title":{},"body":{"components/NavigationComponent.html":{}}}],["167",{"_index":279,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["16px",{"_index":641,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["185px",{"_index":395,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["18px",{"_index":713,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["195px",{"_index":649,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["2",{"_index":847,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["2/6",{"_index":739,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":432,"title":{},"body":{"components/NavigationComponent.html":{}}}],["200px",{"_index":382,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["20px",{"_index":456,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["216",{"_index":398,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["22px",{"_index":389,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["230",{"_index":460,"title":{},"body":{"components/NavigationComponent.html":{}}}],["25",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["25px",{"_index":648,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["27",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["27px",{"_index":640,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["280px",{"_index":628,"title":{},"body":{"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["284px",{"_index":399,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["2px",{"_index":463,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["3/11",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":350,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["30px",{"_index":639,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["33",{"_index":738,"title":{},"body":{"coverage.html":{}}}],["3px",{"_index":650,"title":{},"body":{"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["4.3.2",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["4000",{"_index":273,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["40px",{"_index":711,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["40vw",{"_index":710,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["44",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["500px",{"_index":638,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["50px",{"_index":380,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["5px",{"_index":409,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{}}}],["6.2",{"_index":663,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["60px",{"_index":714,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["7",{"_index":405,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["7.4.0",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["70px",{"_index":386,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["7px",{"_index":396,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["8",{"_index":280,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["8/18",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["80px",{"_index":712,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["87",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["8vh",{"_index":442,"title":{},"body":{"components/NavigationComponent.html":{}}}],["9/18",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["93vh",{"_index":449,"title":{},"body":{"components/NavigationComponent.html":{}}}],["_id",{"_index":478,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["absolute",{"_index":407,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["account",{"_index":789,"title":{},"body":{"index.html":{}}}],["action",{"_index":410,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["actions",{"_index":400,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["actual_component",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["add",{"_index":305,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"index.html":{}}}],["add/remove",{"_index":334,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["added",{"_index":355,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["addfavoritemovie",{"_index":289,"title":{},"body":{"components/MovieCardComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["addfavoritemovie(movieid",{"_index":300,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["additional",{"_index":798,"title":{},"body":{"index.html":{}}}],["again",{"_index":570,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["align",{"_index":384,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["already",{"_index":336,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["angular",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["angular/compiler",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["angular/material/form",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["angular/material/toolbar",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["api",{"_index":233,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":494,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["app.component",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":778,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":73,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingmodule",{"_index":80,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":308,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["artifacts",{"_index":819,"title":{},"body":{"index.html":{}}}],["authenticated",{"_index":791,"title":{},"body":{"index.html":{}}}],["authorization",{"_index":519,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["auto",{"_index":453,"title":{},"body":{"components/NavigationComponent.html":{}}}],["automatically",{"_index":811,"title":{},"body":{"index.html":{}}}],["available",{"_index":501,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"modules.html":{}}}],["back",{"_index":666,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["background",{"_index":193,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["bad",{"_index":566,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["bar",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["based",{"_index":780,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":520,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["beta.36",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["binding",{"_index":226,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["bio",{"_index":185,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["birth",{"_index":186,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["birthday",{"_index":220,"title":{},"body":{"components/EditProfileFormComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["black",{"_index":195,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["body",{"_index":552,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["boolean",{"_index":316,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["bootstrap",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":462,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["brings",{"_index":660,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["browse",{"_index":845,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":411,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["btn:hover",{"_index":646,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["build",{"_index":818,"title":{},"body":{"index.html":{}}}],["built",{"_index":777,"title":{},"body":{"index.html":{}}}],["button",{"_index":277,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["button:hover",{"_index":467,"title":{},"body":{"components/NavigationComponent.html":{},"components/WelcomePageComponent.html":{}}}],["cake",{"_index":631,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["call",{"_index":312,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["called",{"_index":779,"title":{},"body":{"index.html":{}}}],["calls",{"_index":661,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["capabilities",{"_index":836,"title":{},"body":{"index.html":{}}}],["card",{"_index":163,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["card'},{'name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["card.component",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["card.component.html",{"_index":165,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["card.component.scss",{"_index":164,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["card.component.ts",{"_index":160,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:103",{"_index":301,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:120",{"_index":329,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:140",{"_index":314,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:15",{"_index":283,"title":{},"body":{"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["card.component.ts:152",{"_index":332,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:16",{"_index":181,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{}}}],["card.component.ts:17",{"_index":299,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:18",{"_index":282,"title":{},"body":{"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["card.component.ts:19",{"_index":176,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{}}}],["card.component.ts:20",{"_index":337,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:21",{"_index":338,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:24",{"_index":319,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:34",{"_index":311,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:45",{"_index":309,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:58",{"_index":325,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:72",{"_index":321,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:89",{"_index":327,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:9",{"_index":173,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["card/director",{"_index":139,"title":{},"body":{"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["card/genre",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["card/movie",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"coverage.html":{}}}],["card/synopsis",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["catcherror",{"_index":481,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["catcherror(this.handleerror",{"_index":522,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["center",{"_index":377,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["change",{"_index":813,"title":{},"body":{"index.html":{}}}],["check",{"_index":315,"title":{},"body":{"components/MovieCardComponent.html":{},"index.html":{}}}],["choice",{"_index":831,"title":{},"body":{"index.html":{}}}],["class",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["clear",{"_index":425,"title":{},"body":{"components/NavigationComponent.html":{}}}],["cli",{"_index":772,"title":{},"body":{"index.html":{}}}],["clicked",{"_index":802,"title":{},"body":{"index.html":{}}}],["clicking",{"_index":794,"title":{},"body":{"index.html":{}}}],["client",{"_index":493,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"index.html":{}}}],["close",{"_index":591,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["cluster_appmodule",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":563,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"index.html":{}}}],["color",{"_index":194,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["command",{"_index":832,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"overview.html":{}}}],["console.error",{"_index":562,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["console.error('some",{"_index":559,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["console.log(resp",{"_index":360,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["console.log(result",{"_index":586,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["console.log(this.favmovies",{"_index":623,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(this.favoritemovies",{"_index":347,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["console.log(this.movies",{"_index":344,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["console.log(this.user",{"_index":621,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["console.log(userdetails",{"_index":511,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["const",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["constructor",{"_index":170,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["constructor(data",{"_index":171,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["constructor(dialog",{"_index":702,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["constructor(fetchapidata",{"_index":213,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["constructor(http",{"_index":680,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["constructor(private",{"_index":505,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["constructor(public",{"_index":428,"title":{},"body":{"components/NavigationComponent.html":{},"components/WelcomePageComponent.html":{}}}],["constructor(snackbar",{"_index":419,"title":{},"body":{"components/NavigationComponent.html":{}}}],["contain",{"_index":800,"title":{},"body":{"index.html":{}}}],["container",{"_index":372,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["content",{"_index":376,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["context",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":717,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":662,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["current",{"_index":424,"title":{},"body":{"components/NavigationComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["d8afa2",{"_index":642,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["dadada",{"_index":392,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["data",{"_index":167,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["data.bio",{"_index":189,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["data.birth",{"_index":190,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["data.death",{"_index":191,"title":{},"body":{"components/DirectorCardComponent.html":{}}}],["data.description",{"_index":285,"title":{},"body":{"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["data.name",{"_index":188,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{}}}],["data.service",{"_index":252,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["data.service.ts",{"_index":477,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data.service.ts:106",{"_index":690,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:120",{"_index":692,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:134",{"_index":689,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:148",{"_index":682,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:164",{"_index":685,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:178",{"_index":684,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:192",{"_index":683,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:207",{"_index":686,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:212",{"_index":693,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:24",{"_index":681,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:38",{"_index":695,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:50",{"_index":694,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:62",{"_index":687,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:77",{"_index":691,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.service.ts:92",{"_index":688,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["data.title",{"_index":473,"title":{},"body":{"components/SynopsisCardComponent.html":{}}}],["database",{"_index":784,"title":{},"body":{"index.html":{}}}],["date",{"_index":479,"title":{},"body":{"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["death",{"_index":187,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["declarations",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["declaring",{"_index":490,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["decorators",{"_index":179,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["delete",{"_index":539,"title":{},"body":{"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["delete(apiurl",{"_index":542,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["deletefavoritemovie",{"_index":358,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["deletefavoritemovie(movieid",{"_index":543,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["deleteuser",{"_index":601,"title":{},"body":{"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["deleteuser(username",{"_index":541,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["dependencies",{"_index":75,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":284,"title":{},"body":{"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["details",{"_index":799,"title":{},"body":{"index.html":{}}}],["dev",{"_index":808,"title":{},"body":{"index.html":{}}}],["development",{"_index":804,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":287,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["dialogref",{"_index":205,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["dirctor's",{"_index":526,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["directed",{"_index":369,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["direction",{"_index":636,"title":{},"body":{"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["directive",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["directives",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":817,"title":{},"body":{"index.html":{}}}],["director",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["director's",{"_index":528,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["directorcardcomponent",{"_index":43,"title":{"components/DirectorCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directors",{"_index":530,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["directory",{"_index":822,"title":{},"body":{"index.html":{}}}],["display",{"_index":323,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["displayed",{"_index":238,"title":{},"body":{"components/EditProfileFormComponent.html":{},"index.html":{}}}],["dist",{"_index":821,"title":{},"body":{"index.html":{}}}],["div",{"_index":444,"title":{},"body":{"components/NavigationComponent.html":{}}}],["divider",{"_index":470,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["documentation",{"_index":718,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["duration",{"_index":272,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["dynamic",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["e2e",{"_index":829,"title":{},"body":{"index.html":{}}}],["edit",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["editprofileformcomponent",{"_index":46,"title":{"components/EditProfileFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["edituser",{"_index":209,"title":{},"body":{"components/EditProfileFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["edituser(this.username",{"_index":260,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["edituser(username",{"_index":538,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["element",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["email",{"_index":219,"title":{},"body":{"components/EditProfileFormComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["empty",{"_index":549,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["end",{"_index":303,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"index.html":{}}}],["entire",{"_index":499,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["environment",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":554,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["error.error",{"_index":556,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["error.error.message",{"_index":561,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["error.status",{"_index":564,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["errorevent",{"_index":558,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["evenly",{"_index":644,"title":{},"body":{"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["execute",{"_index":827,"title":{},"body":{"index.html":{}}}],["existing",{"_index":781,"title":{},"body":{"index.html":{}}}],["exit_to_app",{"_index":439,"title":{},"body":{"components/NavigationComponent.html":{}}}],["export",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["exports",{"_index":158,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["extractresponsedata",{"_index":677,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["extractresponsedata(res",{"_index":551,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["extracttion",{"_index":547,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["false",{"_index":318,"title":{},"body":{"components/MovieCardComponent.html":{},"miscellaneous/variables.html":{}}}],["fav",{"_index":647,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["favmovies",{"_index":600,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["favorite",{"_index":306,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["favorite.director.name",{"_index":634,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["favorite.title",{"_index":633,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["favorite_border",{"_index":371,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["favoritemovies",{"_index":288,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["favoritemy",{"_index":437,"title":{},"body":{"components/NavigationComponent.html":{}}}],["favorites",{"_index":356,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["features",{"_index":787,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":251,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["fetchapidata",{"_index":206,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["ffffff",{"_index":390,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["field",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["files",{"_index":814,"title":{},"body":{"index.html":{}}}],["first",{"_index":834,"title":{},"body":{"index.html":{}}}],["flex",{"_index":373,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["flexlayoutmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["following",{"_index":801,"title":{},"body":{"index.html":{}}}],["font",{"_index":387,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["form",{"_index":202,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["form'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["form.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["form.component.html",{"_index":204,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.scss",{"_index":203,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":201,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:12",{"_index":250,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["form.component.ts:13",{"_index":248,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["form.component.ts:16",{"_index":575,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:18",{"_index":225,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:19",{"_index":581,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:20",{"_index":582,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:21",{"_index":657,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:22",{"_index":656,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:23",{"_index":217,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:24",{"_index":580,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:26",{"_index":246,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:27",{"_index":245,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["form.component.ts:28",{"_index":247,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["form.component.ts:31",{"_index":244,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["form.component.ts:33",{"_index":577,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:34",{"_index":655,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:38",{"_index":243,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["form.component.ts:53",{"_index":230,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["form/edit",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileFormComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["form/user",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["format",{"_index":242,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["formsmodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":257,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["further",{"_index":837,"title":{},"body":{"index.html":{}}}],["generate",{"_index":816,"title":{},"body":{"index.html":{}}}],["generated",{"_index":771,"title":{},"body":{"index.html":{}}}],["genre",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["genrecardcomponent",{"_index":50,"title":{"components/GenreCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["genres",{"_index":532,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["get(apiurl",{"_index":517,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getallmovies",{"_index":341,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getdirector",{"_index":527,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getdirector(name",{"_index":529,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getfavoritemovies",{"_index":290,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["getfavoritemovies(username",{"_index":535,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getgenre",{"_index":678,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["getgenre(name",{"_index":531,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getmovie",{"_index":524,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getmovie(title",{"_index":525,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getmovies",{"_index":291,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["gets",{"_index":654,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["getting",{"_index":578,"title":{"index.html":{}},"body":{"components/UserLoginFormComponent.html":{}}}],["getuser",{"_index":210,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["getuser(username",{"_index":534,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["getuserinfo",{"_index":602,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["go",{"_index":840,"title":{},"body":{"index.html":{}}}],["goes",{"_index":669,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["graph",{"_index":846,"title":{},"body":{"modules.html":{}}}],["gray",{"_index":471,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["handle",{"_index":553,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["handleerror",{"_index":679,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["handleerror(error",{"_index":555,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["happened",{"_index":567,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["head",{"_index":454,"title":{},"body":{"components/NavigationComponent.html":{}}}],["header",{"_index":197,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["headers",{"_index":518,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["height",{"_index":385,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["help",{"_index":838,"title":{},"body":{"index.html":{}}}],["here",{"_index":670,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["html",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["http",{"_index":504,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["http://localhost:4200",{"_index":810,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":483,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["httpclientmodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":485,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["httpheaders",{"_index":484,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["https://movie",{"_index":495,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["icon",{"_index":403,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["identifier",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["img",{"_index":394,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["implement",{"_index":671,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["implements",{"_index":161,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["import",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["important",{"_index":412,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["imports",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["information",{"_index":232,"title":{},"body":{"components/EditProfileFormComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["informations",{"_index":533,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["inherit",{"_index":446,"title":{},"body":{"components/NavigationComponent.html":{}}}],["inject",{"_index":182,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["inject(mat_dialog_data",{"_index":180,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["injectable",{"_index":480,"title":{"injectables/UserRegistrationService.html":{}},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":676,"title":{},"body":{"injectables/UserRegistrationService.html":{}}}],["input",{"_index":227,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["inputs",{"_index":211,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["instanceof",{"_index":557,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["interface",{"_index":474,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":475,"title":{},"body":{"interfaces/User.html":{}}}],["isfavorite",{"_index":292,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["isfavorite(movieid",{"_index":313,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["json",{"_index":241,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["justify",{"_index":375,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["karma",{"_index":828,"title":{},"body":{"index.html":{}}}],["key",{"_index":786,"title":{},"body":{"index.html":{}}}],["later",{"_index":571,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["layout",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["layoutmodule",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":455,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["legend",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["list",{"_index":335,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["literal",{"_index":172,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":235,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["localstorage.clear",{"_index":429,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["localstorage.getitem('token",{"_index":516,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["localstorage.getitem('user",{"_index":249,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["localstorage.setitem('password",{"_index":267,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["localstorage.setitem('token",{"_index":589,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["localstorage.setitem('user",{"_index":587,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["localstorage.setitem('username",{"_index":265,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["locates",{"_index":426,"title":{},"body":{"components/NavigationComponent.html":{}}}],["log",{"_index":423,"title":{},"body":{"components/NavigationComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"injectables/UserRegistrationService.html":{},"index.html":{}}}],["logged",{"_index":431,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["logic",{"_index":668,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["login",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["logindata",{"_index":574,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["loginuser",{"_index":573,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["logo",{"_index":440,"title":{},"body":{"components/NavigationComponent.html":{},"components/WelcomePageComponent.html":{}}}],["making",{"_index":500,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["map",{"_index":489,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["margin",{"_index":378,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["mat",{"_index":192,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["mat_dialog_data",{"_index":183,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["matbuttonmodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":298,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["matdialogmodule",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":215,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["matformfieldmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":216,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["matsnackbarmodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["md",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["menu",{"_index":434,"title":{},"body":{"components/NavigationComponent.html":{}}}],["menu:hover",{"_index":458,"title":{},"body":{"components/NavigationComponent.html":{}}}],["message",{"_index":237,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["methods",{"_index":168,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["min",{"_index":448,"title":{},"body":{"components/NavigationComponent.html":{}}}],["miscellaneous",{"_index":849,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":592,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["module",{"_index":72,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["modules",{"_index":74,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":839,"title":{},"body":{"index.html":{}}}],["movie",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["movie._id",{"_index":364,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["movie.director.name",{"_index":370,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["movie.title",{"_index":367,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["movieall",{"_index":436,"title":{},"body":{"components/NavigationComponent.html":{}}}],["moviecardcomponent",{"_index":52,"title":{"components/MovieCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["movieid",{"_index":307,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["movies",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{},"index.html":{}}}],["myflix",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["myflixangularclient",{"_index":769,"title":{},"body":{"index.html":{}}}],["name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["navigate",{"_index":809,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":414,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["navigation.component.html",{"_index":416,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":415,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation/navigation.component",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["navigationcomponent",{"_index":54,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["need",{"_index":833,"title":{},"body":{"index.html":{}}}],["new",{"_index":507,"title":{},"body":{"interfaces/User.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":806,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":169,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["non",{"_index":544,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["notifications",{"_index":665,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["now",{"_index":792,"title":{},"body":{"index.html":{}}}],["null",{"_index":537,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["object",{"_index":229,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["objective",{"_index":775,"title":{},"body":{"index.html":{}}}],["observable",{"_index":486,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["occured",{"_index":560,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["ok",{"_index":271,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["once",{"_index":790,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":162,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["onsuccess",{"_index":593,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["open",{"_index":322,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["opendirectordialog",{"_index":293,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["opendirectordialog(name",{"_index":320,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["openeditprofileformdialog",{"_index":603,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["opengenredialog",{"_index":294,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["opengenredialog(name",{"_index":324,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["opensynopsisdialog",{"_index":295,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["opensynopsisdialog(title",{"_index":326,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["openuserlogindialog",{"_index":700,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["openuserregistrationdialog",{"_index":701,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["optional",{"_index":175,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["out",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"components/NavigationComponent.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":445,"title":{},"body":{"components/NavigationComponent.html":{}}}],["overview",{"_index":841,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":748,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":401,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["page",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["page.component",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["page.component.html",{"_index":699,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.scss",{"_index":698,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts",{"_index":697,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:11",{"_index":703,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:12",{"_index":707,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:13",{"_index":704,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:19",{"_index":706,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:29",{"_index":705,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page/welcome",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["param",{"_index":184,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["parameters",{"_index":174,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["params",{"_index":498,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["particular",{"_index":795,"title":{},"body":{"index.html":{}}}],["password",{"_index":218,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["path",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["pathmatch",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["person",{"_index":435,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{}}}],["personmy",{"_index":438,"title":{},"body":{"components/NavigationComponent.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":513,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["pipe(map(this.extractresponsedata",{"_index":521,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["platform",{"_index":830,"title":{},"body":{"index.html":{}}}],["please",{"_index":568,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["point",{"_index":304,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["popup",{"_index":236,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["position",{"_index":406,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["post(apiurl",{"_index":512,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["prefix",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["private",{"_index":550,"title":{},"body":{"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["production",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["profile'},{'name",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["profile.component",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["profile.component.html",{"_index":599,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.scss",{"_index":598,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":597,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:104",{"_index":610,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:114",{"_index":611,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:128",{"_index":609,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:145",{"_index":612,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:17",{"_index":618,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:18",{"_index":619,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:20",{"_index":604,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:23",{"_index":615,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:24",{"_index":617,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:25",{"_index":614,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:26",{"_index":616,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:29",{"_index":608,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:40",{"_index":607,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:54",{"_index":606,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:70",{"_index":613,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:90",{"_index":605,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["project",{"_index":770,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["provide",{"_index":492,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["providedin",{"_index":497,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["providers",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":166,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["put(apiurl",{"_index":536,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["raised",{"_index":276,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["redirectto",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":842,"title":{},"body":{"index.html":{}}}],["register",{"_index":506,"title":{},"body":{"interfaces/User.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"index.html":{}}}],["registered",{"_index":673,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["registeruser",{"_index":652,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["registration",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["reload",{"_index":812,"title":{},"body":{"index.html":{}}}],["remove",{"_index":330,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["remove_circle",{"_index":635,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["removed",{"_index":362,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["removefavoritemovie",{"_index":296,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["removefavoritemovie(movieid",{"_index":328,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["require",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":548,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["reset",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resp",{"_index":256,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["resp.favoritemovies",{"_index":346,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["response",{"_index":546,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["rest",{"_index":783,"title":{},"body":{"index.html":{}}}],["result",{"_index":585,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["result.token",{"_index":590,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["result.user.username",{"_index":588,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["results",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":258,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["returns",{"_index":177,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{}}}],["rgb(161",{"_index":404,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["rgb(187",{"_index":198,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{}}}],["rgb(202",{"_index":278,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["rgb(218",{"_index":397,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["rgb(245",{"_index":459,"title":{},"body":{"components/NavigationComponent.html":{}}}],["right",{"_index":408,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["root'},{'name",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["router",{"_index":417,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["routermodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":157,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":99,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing.module",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":156,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":637,"title":{},"body":{"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["run",{"_index":805,"title":{},"body":{"index.html":{}}}],["running",{"_index":823,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":488,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":482,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["scaffolding",{"_index":815,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["serve",{"_index":807,"title":{},"body":{"index.html":{}}}],["server",{"_index":782,"title":{},"body":{"index.html":{}}}],["settimeout",{"_index":274,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["side",{"_index":468,"title":{},"body":{"components/NavigationComponent.html":{},"index.html":{}}}],["sidenav",{"_index":447,"title":{},"body":{"components/NavigationComponent.html":{}}}],["sidenave",{"_index":450,"title":{},"body":{"components/NavigationComponent.html":{}}}],["sign",{"_index":674,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["single",{"_index":797,"title":{},"body":{"index.html":{}}}],["size",{"_index":388,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["snackbar",{"_index":207,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["solid",{"_index":464,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["sotes",{"_index":579,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["space",{"_index":643,"title":{},"body":{"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["spacer",{"_index":451,"title":{},"body":{"components/NavigationComponent.html":{}}}],["spec\\.ts",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["specific",{"_index":523,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["src/.../environment.prod.ts",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fetch",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":155,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/director",{"_index":159,"title":{},"body":{"components/DirectorCardComponent.html":{},"coverage.html":{}}}],["src/app/edit",{"_index":200,"title":{},"body":{"components/EditProfileFormComponent.html":{},"coverage.html":{}}}],["src/app/fetch",{"_index":476,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/genre",{"_index":281,"title":{},"body":{"components/GenreCardComponent.html":{},"coverage.html":{}}}],["src/app/movie",{"_index":286,"title":{},"body":{"components/MovieCardComponent.html":{},"coverage.html":{}}}],["src/app/navigation/navigation.component.ts",{"_index":413,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/navigation/navigation.component.ts:10",{"_index":420,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:11",{"_index":427,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:16",{"_index":422,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:26",{"_index":421,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/synopsis",{"_index":472,"title":{},"body":{"components/SynopsisCardComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":572,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["src/app/welcome",{"_index":696,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":740,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":768,"title":{"index.html":{}},"body":{}}],["statements",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":540,"title":{},"body":{"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["store",{"_index":576,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["stored",{"_index":820,"title":{},"body":{"index.html":{}}}],["stores",{"_index":234,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["stroked",{"_index":715,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["subscribe((resp",{"_index":262,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["subtitle",{"_index":391,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["success",{"_index":659,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["successful",{"_index":239,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["successfully",{"_index":270,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/NavigationComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["support",{"_index":843,"title":{},"body":{"modules.html":{}}}],["supporting",{"_index":785,"title":{},"body":{"index.html":{}}}],["svg",{"_index":844,"title":{},"body":{"modules.html":{}}}],["synopsis",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["synopsiscardcomponent",{"_index":56,"title":{"components/SynopsisCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["table",{"_index":747,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":746,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":796,"title":{},"body":{"index.html":{}}}],["takes",{"_index":803,"title":{},"body":{"index.html":{}}}],["tammy.herokuapp.com",{"_index":496,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["test",{"_index":826,"title":{},"body":{"index.html":{}}}],["testing",{"_index":835,"title":{},"body":{"index.html":{}}}],["tests",{"_index":825,"title":{},"body":{"index.html":{}}}],["text",{"_index":383,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["this.addfavoritemovie(movie._id",{"_index":368,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.dialog.open(directorcardcomponent",{"_index":351,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.dialog.open(editprofileformcomponent",{"_index":627,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.dialog.open(genrecardcomponent",{"_index":348,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.dialog.open(synopsiscardcomponent",{"_index":352,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.dialog.open(userloginformcomponent",{"_index":709,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["this.dialog.open(userregistrationformcomponent",{"_index":708,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["this.dialogref.close",{"_index":263,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["this.favmovies",{"_index":622,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.favoritemovies",{"_index":345,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.favoritemovies.some((movie",{"_index":363,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata",{"_index":259,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.fetchapidata.addfavoritemovie(movieid).subscribe((resp",{"_index":353,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata.deletefavoritemovie(movieid).subscribe((resp",{"_index":359,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fetchapidata.deleteuser(this.username).subscribe",{"_index":624,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.fetchapidata.getallmovies().subscribe((resp",{"_index":342,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata.getuser(user).subscribe((resp",{"_index":254,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fetchapidata.userlogin(this.logindata).subscribe",{"_index":584,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["this.fetchapidata.userregistration(this.userdata).subscribe",{"_index":667,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["this.getfavoritemovies",{"_index":340,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.getmovies",{"_index":339,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.getuser",{"_index":253,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.getuserinfo",{"_index":620,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.http",{"_index":503,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["this.isfavorite(movie._id",{"_index":365,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.logindata.username",{"_index":594,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["this.movies",{"_index":343,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.ngoninit",{"_index":357,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.removefavoritemovie(movie._id",{"_index":366,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.router.navigate(['/welcome']).then",{"_index":433,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.router.navigate(['movies",{"_index":595,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["this.router.navigate(['welcome",{"_index":626,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.snackbar.open",{"_index":361,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.snackbar.open('user",{"_index":672,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["this.snackbar.open('you",{"_index":430,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.snackbar.open('your",{"_index":269,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.snackbar.open(`${this.username",{"_index":625,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.snackbar.open(`${title",{"_index":354,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.snackbar.open(result",{"_index":596,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["this.user",{"_index":255,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.user.birthday",{"_index":224,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.user.email",{"_index":223,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.user.password",{"_index":222,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.user.username",{"_index":221,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.userprofile",{"_index":261,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.userprofile.password",{"_index":268,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["this.userprofile.username",{"_index":266,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["throwerror",{"_index":487,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["throwerror('something",{"_index":565,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["toggle",{"_index":333,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["togglefavorite",{"_index":297,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["togglefavorite(movie",{"_index":331,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["token",{"_index":515,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["toolbar",{"_index":441,"title":{},"body":{"components/NavigationComponent.html":{}}}],["top",{"_index":379,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["transition",{"_index":465,"title":{},"body":{"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["true",{"_index":317,"title":{},"body":{"components/MovieCardComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":569,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["tslib",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":545,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["typedoc",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":824,"title":{},"body":{"index.html":{}}}],["up",{"_index":675,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["update",{"_index":264,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["updated",{"_index":240,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserProfileComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["updates",{"_index":231,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["upon",{"_index":793,"title":{},"body":{"index.html":{}}}],["url",{"_index":491,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["use",{"_index":302,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"index.html":{}}}],["used",{"_index":664,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["user",{"_index":59,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"index.html":{}}}],["user's",{"_index":310,"title":{},"body":{"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["user.birthday",{"_index":632,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.email",{"_index":630,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.username",{"_index":629,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user\\'s",{"_index":651,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["userdata",{"_index":653,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["userdetails",{"_index":509,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["userlogin",{"_index":583,"title":{},"body":{"components/UserLoginFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["userlogin(userdetails",{"_index":514,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["userloginformcomponent",{"_index":58,"title":{"components/UserLoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userlogout",{"_index":418,"title":{},"body":{"components/NavigationComponent.html":{}}}],["username",{"_index":208,"title":{},"body":{"components/EditProfileFormComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["userprofile",{"_index":212,"title":{},"body":{"components/EditProfileFormComponent.html":{}}}],["userprofilecomponent",{"_index":61,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userregistration",{"_index":508,"title":{},"body":{"interfaces/User.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{}}}],["userregistration(userdetails",{"_index":510,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{}}}],["userregistrationformcomponent",{"_index":63,"title":{"components/UserRegistrationFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userregistrationservice",{"_index":214,"title":{"injectables/UserRegistrationService.html":{}},"body":{"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"interfaces/User.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"injectables/UserRegistrationService.html":{},"coverage.html":{}}}],["users",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"index.html":{}}}],["using",{"_index":776,"title":{},"body":{"index.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileFormComponent.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":228,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["var",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["variable",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":850,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":773,"title":{},"body":{"index.html":{}}}],["via",{"_index":502,"title":{},"body":{"interfaces/User.html":{},"injectables/UserRegistrationService.html":{},"index.html":{}}}],["view",{"_index":788,"title":{},"body":{"index.html":{}}}],["void",{"_index":178,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["welcome",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["welcomepagecomponent",{"_index":65,"title":{"components/WelcomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DirectorCardComponent.html":{},"components/EditProfileFormComponent.html":{},"components/GenreCardComponent.html":{},"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["white",{"_index":196,"title":{},"body":{"components/DirectorCardComponent.html":{},"components/GenreCardComponent.html":{},"components/SynopsisCardComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["width",{"_index":349,"title":{},"body":{"components/MovieCardComponent.html":{},"components/NavigationComponent.html":{},"components/UserProfileComponent.html":{},"components/WelcomePageComponent.html":{}}}],["window.location.reload",{"_index":275,"title":{},"body":{"components/EditProfileFormComponent.html":{},"components/NavigationComponent.html":{}}}],["wrap",{"_index":374,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["you'll",{"_index":658,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["zone.js",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'myFlix-Angular-app'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'myFlix-Angular-app';\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDirectorCardComponent\n\nDirectorCardComponent\n\nAppModule -->\n\nDirectorCardComponent->AppModule\n\n\n\n\n\nEditProfileFormComponent\n\nEditProfileFormComponent\n\nAppModule -->\n\nEditProfileFormComponent->AppModule\n\n\n\n\n\nGenreCardComponent\n\nGenreCardComponent\n\nAppModule -->\n\nGenreCardComponent->AppModule\n\n\n\n\n\nMovieCardComponent\n\nMovieCardComponent\n\nAppModule -->\n\nMovieCardComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nSynopsisCardComponent\n\nSynopsisCardComponent\n\nAppModule -->\n\nSynopsisCardComponent->AppModule\n\n\n\n\n\nUserLoginFormComponent\n\nUserLoginFormComponent\n\nAppModule -->\n\nUserLoginFormComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserRegistrationFormComponent\n\nUserRegistrationFormComponent\n\nAppModule -->\n\nUserRegistrationFormComponent->AppModule\n\n\n\n\n\nWelcomePageComponent\n\nWelcomePageComponent\n\nAppModule -->\n\nWelcomePageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            DirectorCardComponent\n                        \n                        \n                            EditProfileFormComponent\n                        \n                        \n                            GenreCardComponent\n                        \n                        \n                            MovieCardComponent\n                        \n                        \n                            NavigationComponent\n                        \n                        \n                            SynopsisCardComponent\n                        \n                        \n                            UserLoginFormComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                        \n                            UserRegistrationFormComponent\n                        \n                        \n                            WelcomePageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { FormsModule } from '@angular/forms';\n\nimport { UserRegistrationFormComponent } from './user-registration-form/user-registration-form.component';\nimport { UserLoginFormComponent } from './user-login-form/user-login-form.component';\nimport { MovieCardComponent } from './movie-card/movie-card.component';\nimport { WelcomePageComponent } from './welcome-page/welcome-page.component';\nimport { GenreCardComponent } from './genre-card/genre-card.component';\nimport { DirectorCardComponent } from './director-card/director-card.component';\nimport { SynopsisCardComponent } from './synopsis-card/synopsis-card.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { EditProfileFormComponent } from './edit-profile-form/edit-profile-form.component';\n\nconst appRoutes: Routes = [\n  { path: 'welcome', component: WelcomePageComponent },\n  { path: 'movies', component: NavigationComponent },\n  { path: 'users', component: NavigationComponent },\n\n  { path: '', redirectTo: 'welcome', pathMatch: 'prefix' },\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserRegistrationFormComponent,\n    UserLoginFormComponent,\n    MovieCardComponent,\n    WelcomePageComponent,\n    GenreCardComponent,\n    DirectorCardComponent,\n    SynopsisCardComponent,\n    UserProfileComponent,\n    NavigationComponent,\n    EditProfileFormComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    MatIconModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    MatTooltipModule,\n    MatListModule,\n    FlexLayoutModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DirectorCardComponent.html":{"url":"components/DirectorCardComponent.html","title":"component - DirectorCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DirectorCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/director-card/director-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-director-card\n            \n\n            \n                styleUrls\n                ./director-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./director-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/director-card/director-card.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/director-card/director-card.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/director-card/director-card.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-director-card',\n  templateUrl: './director-card.component.html',\n  styleUrls: ['./director-card.component.scss'],\n})\nexport class DirectorCardComponent implements OnInit {\n  /**\n   *\n   * @param data\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA)\n    public data: { name: string; bio: string; birth: string; death: string }\n  ) {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    Director: {{ data.name }}\n  \n  Bio: {{ data.bio }}\n  Birth: {{ data.birth }}\n  Death: {{ data.death }}\n\n\n    \n\n    \n                \n                    ./director-card.component.scss\n                \n                .mat-card {\n  background-color: black;\n  color: white;\n}\n.mat-card-header {\n  color: rgb(187, 14, 14);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Director: {{ data.name }}    Bio: {{ data.bio }}  Birth: {{ data.birth }}  Death: {{ data.death }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DirectorCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfileFormComponent.html":{"url":"components/EditProfileFormComponent.html","title":"component - EditProfileFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProfileFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/edit-profile-form/edit-profile-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profile-form\n            \n\n            \n                styleUrls\n                ./edit-profile-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-profile-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                user\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editUser\n                            \n                            \n                                getUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userProfile\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: UserRegistrationService, dialogRef: MatDialogRef, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/edit-profile-form/edit-profile-form.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userProfile\n                    \n                \n                \n                    \n                        Type :         { Username: any; Password: any; Email: any; Birthday: any; }\n\n                    \n                \n                \n                    \n                        Default value : {\n    Username: this.user.Username,\n    Password: this.user.Password,\n    Email: this.user.Email,\n    Birthday: this.user.Birthday,\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/app/edit-profile-form/edit-profile-form.component.ts:18\n                            \n                        \n                \n                    \n                         Binding input values to userProfile object\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile-form/edit-profile-form.component.ts:53\n                \n            \n\n\n            \n                \n                    updates the user information in API\nthen stores it in localstorage. a popup message is displayed after successful updated\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        an updated user in json format\nthen stores it in localstorage. a popup message is displayed after successful updated\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile-form/edit-profile-form.component.ts:38\n                \n            \n\n\n            \n                \n                    get user info\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/edit-profile-form/edit-profile-form.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile-form/edit-profile-form.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRegistrationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile-form/edit-profile-form.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile-form/edit-profile-form.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile-form/edit-profile-form.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : localStorage.getItem('user')\n                    \n                \n                    \n                        \n                                Defined in src/app/edit-profile-form/edit-profile-form.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { UserRegistrationService } from '../fetch-api-data.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-edit-profile-form',\n  templateUrl: './edit-profile-form.component.html',\n  styleUrls: ['./edit-profile-form.component.scss'],\n})\nexport class EditProfileFormComponent implements OnInit {\n  Username = localStorage.getItem('user');\n  user: any = {};\n\n  /**\n   *  Binding input values to userProfile object\n   */\n  @Input() userProfile = {\n    Username: this.user.Username,\n    Password: this.user.Password,\n    Email: this.user.Email,\n    Birthday: this.user.Birthday,\n  };\n\n  constructor(\n    public fetchApiData: UserRegistrationService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n\n  /**\n   * get user info\n   */\n  getUser(): void {\n    const user = localStorage.getItem('user');\n    this.fetchApiData.getUser(user).subscribe((resp: any) => {\n      this.user = resp;\n    });\n  }\n\n  /**\n   * updates the user information in API\n   * @function editUser\n   * @param Username {any}\n   * @param userProfile {any}\n   * @return an updated user in json format\n   * then stores it in localstorage. a popup message is displayed after successful updated\n   */\n  editUser(): void {\n    this.fetchApiData\n      .editUser(this.Username, this.userProfile)\n      .subscribe((resp) => {\n        this.dialogRef.close();\n\n        // update profile in localstorage\n        localStorage.setItem('Username', this.userProfile.Username);\n        localStorage.setItem('Password', this.userProfile.Password);\n\n        this.snackBar.open('Your profile was updated successfully!', 'OK', {\n          duration: 4000,\n        });\n        setTimeout(() => {\n          window.location.reload();\n        });\n      });\n  }\n}\n\n    \n\n    \n        \n  \n    User Profile\n  \n\n  \n    \n      \n      \n        \n      \n\n      \n      \n        \n      \n\n      \n      \n        \n      \n\n      \n      \n        \n      \n    \n  \n\n  \n  \n    Update Profile\n  \n\n\n    \n\n    \n                \n                    ./edit-profile-form.component.scss\n                \n                .mat-raised-button {\n  background-color: rgb(202, 167, 8);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      User Profile                                                                                                                              Update Profile  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'EditProfileFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GenreCardComponent.html":{"url":"components/GenreCardComponent.html","title":"component - GenreCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GenreCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/genre-card/genre-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-genre-card\n            \n\n            \n                styleUrls\n                ./genre-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./genre-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/genre-card/genre-card.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/genre-card/genre-card.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/genre-card/genre-card.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-genre-card',\n  templateUrl: './genre-card.component.html',\n  styleUrls: ['./genre-card.component.scss'],\n})\nexport class GenreCardComponent implements OnInit {\n  /**\n   *\n   * @param data\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { name: string; description: string }\n  ) {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    Genre: {{ data.name }}\n  \n  {{ data.description }}\n\n\n    \n\n    \n                \n                    ./genre-card.component.scss\n                \n                .mat-card {\n  background-color: black;\n  color: white;\n}\n.mat-card-header {\n  color: rgb(187, 14, 14);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Genre: {{ data.name }}    {{ data.description }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GenreCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MovieCardComponent.html":{"url":"components/MovieCardComponent.html","title":"component - MovieCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MovieCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/movie-card/movie-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-movie-card\n            \n\n            \n                styleUrls\n                ./movie-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./movie-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                FavoriteMovies\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                movies\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFavoriteMovie\n                            \n                            \n                                getFavoriteMovies\n                            \n                            \n                                getMovies\n                            \n                            \n                                isFavorite\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDirectorDialog\n                            \n                            \n                                openGenreDialog\n                            \n                            \n                                openSynopsisDialog\n                            \n                            \n                                removeFavoriteMovie\n                            \n                            \n                                toggleFavorite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: UserRegistrationService, dialog: MatDialog, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/movie-card/movie-card.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFavoriteMovie\n                        \n                    \n                \n            \n            \n                \naddFavoriteMovie(MovieID: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:103\n                \n            \n\n\n            \n                \n                    use API end-point to add user favorite movie\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    MovieID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        an array of the movie object in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavoriteMovies\n                        \n                    \n                \n            \n            \n                \ngetFavoriteMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:45\n                \n            \n\n\n            \n                \n                    get an array of the user's favorite movies from user's data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMovies\n                        \n                    \n                \n            \n            \n                \ngetMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:34\n                \n            \n\n\n            \n                \n                    use Api call to get data of all movies\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        movies in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFavorite\n                        \n                    \n                \n            \n            \n                \nisFavorite(MovieID: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:140\n                \n            \n\n\n            \n                \n                    check if the movie is the user's favorite?\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    MovieID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true or false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDirectorDialog\n                        \n                    \n                \n            \n            \n                \nopenDirectorDialog(name: string, bio: string, birth: string, death: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:72\n                \n            \n\n\n            \n                \n                    open a dialog to display the DirectorCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bio\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    birth\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    death\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGenreDialog\n                        \n                    \n                \n            \n            \n                \nopenGenreDialog(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:58\n                \n            \n\n\n            \n                \n                    open a dialog to display the GenreCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSynopsisDialog\n                        \n                    \n                \n            \n            \n                \nopenSynopsisDialog(title: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:89\n                \n            \n\n\n            \n                \n                    open a dialog to display the SynopsisCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFavoriteMovie\n                        \n                    \n                \n            \n            \n                \nremoveFavoriteMovie(MovieId: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:120\n                \n            \n\n\n            \n                \n                    use API end-point to remove user favorite\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    MovieId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        updated user's data in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFavorite\n                        \n                    \n                \n            \n            \n                \ntoggleFavorite(movie: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/movie-card/movie-card.component.ts:152\n                \n            \n\n\n            \n                \n                    toggle add/remove user's favorite function.\nif the movie is not on the favorite list, call ...\nif the movie is already on the user favorite list, call ...\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movie\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FavoriteMovies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRegistrationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserRegistrationService } from '../fetch-api-data.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { GenreCardComponent } from '../genre-card/genre-card.component';\nimport { DirectorCardComponent } from '../director-card/director-card.component';\nimport { SynopsisCardComponent } from '../synopsis-card/synopsis-card.component';\n\n@Component({\n  selector: 'app-movie-card',\n  templateUrl: './movie-card.component.html',\n  styleUrls: ['./movie-card.component.scss'],\n})\nexport class MovieCardComponent implements OnInit {\n  movies: any = [];\n  FavoriteMovies: any[] = [];\n  user: any[] = [];\n  constructor(\n    public fetchApiData: UserRegistrationService,\n    public dialog: MatDialog,\n    public snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.getMovies();\n    this.getFavoriteMovies();\n  }\n\n  /**\n   * use Api call to get data of all movies\n   * @function getAllMovies\n   * @return movies in json format\n   */\n  getMovies(): void {\n    this.fetchApiData.getAllMovies().subscribe((resp: any) => {\n      this.movies = resp;\n      console.log(this.movies);\n      return this.movies;\n    });\n  }\n\n  /**\n   * get an array of the user's favorite movies from user's data\n   */\n  getFavoriteMovies(): void {\n    const user = localStorage.getItem('user');\n    this.fetchApiData.getUser(user).subscribe((resp: any) => {\n      this.FavoriteMovies = resp.FavoriteMovies;\n      console.log(this.FavoriteMovies);\n    });\n  }\n\n  /**\n   *open a dialog to display the GenreCardComponent\n   * @param name {string}\n   * @param description {string}\n   */\n  openGenreDialog(name: string, description: string): void {\n    this.dialog.open(GenreCardComponent, {\n      data: { name: name, description: description },\n      width: '300px',\n    });\n  }\n\n  /**\n   * open a dialog to display the DirectorCardComponent\n   * @param name {string}\n   * @param bio {string}\n   * @param birth {string}\n   * @param death {string}\n   */\n  openDirectorDialog(\n    name: string,\n    bio: string,\n    birth: string,\n    death: string\n  ): void {\n    this.dialog.open(DirectorCardComponent, {\n      data: { name: name, bio: bio, birth: birth, death: death },\n      width: '300px',\n    });\n  }\n\n  /**\n   * open a dialog to display the SynopsisCardComponent\n   * @param title {string}\n   * @param description {string}\n   */\n  openSynopsisDialog(title: string, description: string): void {\n    this.dialog.open(SynopsisCardComponent, {\n      data: { title: title, description: description },\n      width: '300px',\n    });\n  }\n\n  /**\n   * use API end-point to add user favorite movie\n   * @function addFavoriteMovie\n   * @param MovieID {string}\n   * @param title {string}\n   * @returns an array of the movie object in json format\n   */\n  addFavoriteMovie(MovieID: string, title: string): void {\n    this.fetchApiData.addFavoriteMovie(MovieID).subscribe((resp: any) => {\n      this.snackBar.open(`${title} has been added to your favorites!`, 'OK', {\n        duration: 4000,\n      });\n      this.ngOnInit();\n    });\n    return this.getFavoriteMovies();\n  }\n\n  /**\n   * use API end-point to remove user favorite\n   * @function deleteFavoriteMovie\n   * @param MovieId {string}\n   * @param title {string}\n   * @returns updated user's data in json format\n   */\n  removeFavoriteMovie(MovieId: string, title: string): void {\n    this.fetchApiData.deleteFavoriteMovie(MovieId).subscribe((resp: any) => {\n      console.log(resp);\n      this.snackBar.open(\n        `${title} has been removed from your favorites!`,\n        'OK',\n        {\n          duration: 4000,\n        }\n      );\n      this.ngOnInit();\n    });\n    return this.getFavoriteMovies();\n  }\n\n  /**\n   * check if the movie is the user's favorite?\n   * @param MovieID {string}\n   * @returns true or false\n   */\n  isFavorite(MovieID: string): boolean {\n    return this.FavoriteMovies.some((movie) => movie._id === MovieID);\n  }\n\n  /**\n   * toggle add/remove user's favorite function.\n   * if the movie is not on the favorite list, call ...\n   * @function addFavoriteMovie\n   * if the movie is already on the user favorite list, call ...\n   * @function removeFavoriteMovie\n   * @param movie {any}\n   */\n  toggleFavorite(movie: any): void {\n    this.isFavorite(movie._id)\n      ? this.removeFavoriteMovie(movie._id, movie.Title)\n      : this.addFavoriteMovie(movie._id, movie.Title);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ movie.Title }}\n      \n        Directed by: {{ movie.Director.Name }}\n      \n    \n    \n      \n    \n    \n      \n        Synopsis\n      \n      \n        Genre\n      \n      \n        Director\n      \n      \n      \n         favorite_border \n         favorite \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./movie-card.component.scss\n                \n                .movies-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 50px;\n}\n.mat-card {\n  margin: 10px;\n  width: 200px;\n  background-color: black;\n}\n.mat-card-header {\n  justify-content: center;\n  text-align: center;\n  height: 70px;\n}\n.mat-card-title {\n  font-size: 22px;\n  color: #ffffff;\n}\n.mat-card-subtitle {\n  color: #dadada;\n  font-size: 12px;\n}\n/* .mat-card img {\n  width: 185px;\n  margin: 7px;\n}\n */\n.img-container {\n  text-align: center;\n  width: 200px;\n  height: 300px;\n  background-color: rgb(218, 216, 216);\n}\n.img-container img {\n  width: 185px;\n  height: 284px;\n  margin: 7px;\n}\n.mat-card-actions {\n  display: flex;\n  height: 50px;\n}\n\n.mat-button {\n  padding: 0;\n}\n.mat-icon-button {\n  color: rgb(161, 7, 7);\n  position: absolute;\n  right: 5px;\n  top: 5px;\n}\n\n#action-btn {\n  color: rgb(202, 167, 8) !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ movie.Title }}              Directed by: {{ movie.Director.Name }}                                          Synopsis                    Genre                    Director                           favorite_border          favorite             '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MovieCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navigation/navigation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                userLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(snackBar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/navigation/navigation.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userLogout\n                        \n                    \n                \n            \n            \n                \nuserLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:16\n                \n            \n\n\n            \n                \n                    log out the current user and clear the localstorage. Then locates to 'welcome page'\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navigation/navigation.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/navigation/navigation.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n})\nexport class NavigationComponent implements OnInit {\n  constructor(public snackBar: MatSnackBar, public router: Router) {}\n\n  /**\n   * log out the current user and clear the localstorage. Then locates to 'welcome page'\n   */\n  userLogout(): void {\n    localStorage.clear();\n    this.snackBar.open('You successfully logged out!', 'OK', {\n      duration: 2000,\n    });\n    this.router.navigate(['/welcome']).then(() => {\n      window.location.reload();\n    });\n  }\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        menu\n      \n    \n    \n      \n    \n\n    \n\n    \n      movie All Movies\n      favorite My Favorites -->\n      person My Profile\n      Log Out\n    \n  \n  \n    \n      \n        \n          movieAll Movies\n        \n          favoriteMy Favorites -->\n        \n          personMy Profile\n        \n\n        \n          exit_to_app Log Out\n      \n    \n    \n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                .logo {\n  width: 200px;\n}\n\nmat-toolbar {\n  height: 8vh;\n  width: 100vw;\n  background: black;\n  color: rgb(202, 167, 8);\n  padding-right: 50px;\n}\n\ndiv {\n  overflow: inherit;\n}\n\nmat-sidenav-container {\n  min-height: 93vh !important;\n}\n\nmat-sidenave-content {\n  text-align: center;\n}\n\n.spacer {\n  flex: 1 1 auto;\n}\n\n.head-menu {\n  margin-left: 20px;\n  font-size: 15px;\n}\n.head-menu:hover {\n  color: rgb(245, 230, 166);\n}\n\n.head-menu-button {\n  margin-left: 20px;\n  background-color: black;\n  color: rgb(202, 167, 8);\n\n  border: 2px solid rgb(202, 167, 8);\n  transition-duration: 0.4s;\n}\n\n.head-menu-button:hover {\n  background-color: rgb(202, 167, 8);\n  color: black;\n}\n.menu-side {\n  margin-top: 10px;\n  color: rgb(202, 167, 8);\n}\n\n.side-menu-container {\n  background-color: black;\n  width: 150px !important;\n}\n\n.side-icon {\n  margin-right: 5px;\n}\n\nmat-divider {\n  background-color: gray;\n  margin-top: 10px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    menu                                      movie All Movies      favorite My Favorites -->      person My Profile      Log Out                                    movieAll Movies                  favoriteMy Favorites -->                  personMy Profile                          exit_to_app Log Out                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SynopsisCardComponent.html":{"url":"components/SynopsisCardComponent.html","title":"component - SynopsisCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SynopsisCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/synopsis-card/synopsis-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-synopsis-card\n            \n\n            \n                styleUrls\n                ./synopsis-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./synopsis-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: literal type)\n                    \n                \n                        \n                            \n                                Defined in src/app/synopsis-card/synopsis-card.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                    literal type\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/synopsis-card/synopsis-card.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/synopsis-card/synopsis-card.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-synopsis-card',\n  templateUrl: './synopsis-card.component.html',\n  styleUrls: ['./synopsis-card.component.scss'],\n})\nexport class SynopsisCardComponent implements OnInit {\n  /**\n   *\n   * @param data\n   */\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: { title: string; description: string }\n  ) {}\n\n  ngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    Title: {{ data.title }}\n  \n  {{ data.description }}\n\n\n    \n\n    \n                \n                    ./synopsis-card.component.scss\n                \n                .mat-card {\n  background-color: black;\n  color: white;\n}\n.mat-card-header {\n  color: rgb(187, 14, 14);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Title: {{ data.title }}    {{ data.description }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SynopsisCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fetch-api-data.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            Birthday\n                                        \n                                \n                                \n                                        \n                                            Email\n                                        \n                                \n                                \n                                        \n                                            FavoriteMovies\n                                        \n                                \n                                \n                                        \n                                            Username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Birthday\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Birthday:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FavoriteMovies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FavoriteMovies:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// Declaring the api url that will provide data for client app\nconst apiUrl = 'https://movie-api-by-tammy.herokuapp.com';\nexport interface User {\n  _id: string;\n  FavoriteMovies: Array;\n  Username: string;\n  Email: string;\n  Birthday: Date;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserRegistrationService {\n  /**\n   * Inject the HttpClient module to the constructor params\n  This will provide HttpClient to the entire class, making it available via this.http\n   * @param http \n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * call API end-point to register a new user\n   * @function userRegistration\n   * @param userDetails {any}\n   * @returns a new user object in json format\n   */\n  public userRegistration(userDetails: any): Observable {\n    console.log(userDetails);\n    return this.http\n      .post(apiUrl + '/users', userDetails)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to log in a user\n   * @param userDetails {any}\n   * @returns user's data in json format\n   */\n  public userLogin(userDetails: any): Observable {\n    console.log(userDetails);\n    return this.http\n      .post(apiUrl + '/login', userDetails)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to get all movies\n   * @function getAllMovies\n   * @return array of movies object in json format\n   */\n  getAllMovies(): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/movies', {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to get a specific movie by Title\n   * @function getMovie\n   * @param Title {any}\n   * @returns a movie object in json format\n   */\n  getMovie(Title: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/movies/' + Title, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to get a director data by dirctor's name\n   * @function getDirector\n   * @param Name {any}\n   * @returns a director's data in json format\n   */\n  getDirector(Name: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/directors/' + Name, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to get a genre data\n   * @param Name {any}\n   * @returns a genre data in json format\n   */\n  getGenre(Name: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/genres/' + Name, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to get a user's informations\n   * @param Username {any}\n   * @returns a user's information in json format\n   */\n  getUser(Username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/users/' + Username, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to get a user's favorite movies list\n   * @param Username {any}\n   * @returns a list of the user's favorite movies in json format\n   */\n  getFavoriteMovies(Username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/users/' + Username + '/movies', {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to add a movie to the user's favorite list\n   * @param MovieID {any}\n   * @returns the user's favorite list in json format\n   */\n  addFavoriteMovie(MovieID: any): Observable {\n    const token = localStorage.getItem('token');\n    const Username = localStorage.getItem('user');\n    return this.http\n      .put(apiUrl + '/users/' + Username + '/movies/' + MovieID, null, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to edit the user's informations\n   * @param Username {any}\n   * @param userDetails {any}\n   * @returns updated user's informations in json format\n   */\n  editUser(Username: any, userDetails: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .put(apiUrl + '/users/' + Username, userDetails, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to delete the current user\n   * @param Username {any}\n   * @returns delete status\n   */\n  deleteUser(Username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .delete(apiUrl + '/users/' + Username, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to delete a user's favorite movie\n   * @param MovieID {any}\n   * @returns updated user's information after removed a movie from the list in json format\n   */\n  deleteFavoriteMovie(MovieID: any): Observable {\n    const Username = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    return this.http\n      .delete(apiUrl + '/users/' + Username + '/movies/' + MovieID, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * Non-typed response extracttion\n   * @param res {any}\n   * @returns response || empty object\n   */\n  private extractResponseData(res: any): any {\n    const body = res;\n    return body || {};\n  }\n  // handle error\n  private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occured:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\n      );\n    }\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserLoginFormComponent.html":{"url":"components/UserLoginFormComponent.html","title":"component - UserLoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserLoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-login-form/user-login-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-login-form\n            \n\n            \n                styleUrls\n                ./user-login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loginData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: UserRegistrationService, dialogRef: MatDialogRef, snackBar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-login-form/user-login-form.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loginData\n                    \n                \n                \n                    \n                        Type :         { Username: string; Password: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/user-login-form/user-login-form.component.ts:16\n                            \n                        \n                \n                    \n                        get input values then store in loginData\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-login-form/user-login-form.component.ts:33\n                \n            \n\n\n            \n                \n                    use API end-point to login the user by getting data from the input.\nThen sotes the user's data in localstorage\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        user's data in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-login-form/user-login-form.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRegistrationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { UserRegistrationService } from '../fetch-api-data.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-user-login-form',\n  templateUrl: './user-login-form.component.html',\n  styleUrls: ['./user-login-form.component.scss'],\n})\nexport class UserLoginFormComponent implements OnInit {\n  /**\n   * get input values then store in loginData\n   */\n  @Input() loginData = { Username: '', Password: '' };\n  constructor(\n    public fetchApiData: UserRegistrationService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * use API end-point to login the user by getting data from the input.\n   * Then sotes the user's data in localstorage\n   * @function userLogin\n   * @param loginData {object}\n   * @return user's data in json format\n   */\n  loginUser(): void {\n    this.fetchApiData.userLogin(this.loginData).subscribe(\n      (result) => {\n        console.log(result);\n        localStorage.setItem('user', result.user.Username);\n        localStorage.setItem('token', result.token);\n        this.dialogRef.close(); // close the modal onsuccess!\n        this.snackBar.open(\n          `${this.loginData.Username} logged in successfully!`,\n          'OK',\n          {\n            duration: 4000,\n          }\n        );\n        this.router.navigate(['movies']);\n      },\n      (result) => {\n        this.snackBar.open(result, 'OK', {\n          duration: 4000,\n        });\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    Log in!\n  \n  \n    \n      \n      \n        \n      \n\n      \n      \n        \n      \n    \n  \n  \n  \n    \n      Log In\n    \n  \n\n\n    \n\n    \n                \n                    ./user-login-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Log in!                                                                                Log In      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserLoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-profile/user-profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n            \n                styleUrls\n                ./user-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                FavMovies\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                user\n                            \n                            \n                                Username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                getFavoriteMovies\n                            \n                            \n                                getUserInfo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDirectorDialog\n                            \n                            \n                                openEditProfileFormDialog\n                            \n                            \n                                openGenreDialog\n                            \n                            \n                                openSynopsisDialog\n                            \n                            \n                                removeFavoriteMovie\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: UserRegistrationService, snackBar: MatSnackBar, dialog: MatDialog, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-profile/user-profile.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:90\n                \n            \n\n\n            \n                \n                    call API end-point to remove the current user\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        remove status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavoriteMovies\n                        \n                    \n                \n            \n            \n                \ngetFavoriteMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:54\n                \n            \n\n\n            \n                \n                    get user's FavoriteMovies from the user's data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInfo\n                        \n                    \n                \n            \n            \n                \ngetUserInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:40\n                \n            \n\n\n            \n                \n                    call API end-point to get the user's information\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        user's data in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDirectorDialog\n                        \n                    \n                \n            \n            \n                \nopenDirectorDialog(name: string, bio: string, birth: string, death: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:128\n                \n            \n\n\n            \n                \n                    open a dialog to display the DirectorCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bio\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    birth\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    death\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openEditProfileFormDialog\n                        \n                    \n                \n            \n            \n                \nopenEditProfileFormDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:104\n                \n            \n\n\n            \n                \n                    open a dialog to edit the user profile\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGenreDialog\n                        \n                    \n                \n            \n            \n                \nopenGenreDialog(name: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:114\n                \n            \n\n\n            \n                \n                    open a dialog to display the GenreCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSynopsisDialog\n                        \n                    \n                \n            \n            \n                \nopenSynopsisDialog(title: string, description: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:145\n                \n            \n\n\n            \n                \n                    open a dialog to display the SynopsisCardComponent\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    description\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFavoriteMovie\n                        \n                    \n                \n            \n            \n                \nremoveFavoriteMovie(MovieId: string, title: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-profile/user-profile.component.ts:70\n                \n            \n\n\n            \n                \n                    use API end-point to remove user favorite\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    MovieId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        updated user's data in json format\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FavMovies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRegistrationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : localStorage.getItem('user')\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserRegistrationService, User } from '../fetch-api-data.service';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EditProfileFormComponent } from '../edit-profile-form/edit-profile-form.component';\nimport { GenreCardComponent } from '../genre-card/genre-card.component';\nimport { DirectorCardComponent } from '../director-card/director-card.component';\nimport { SynopsisCardComponent } from '../synopsis-card/synopsis-card.component';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss'],\n})\nexport class UserProfileComponent implements OnInit {\n  user: any = {};\n  Username = localStorage.getItem('user');\n\n  FavMovies: any[] = [];\n\n  constructor(\n    public fetchApiData: UserRegistrationService,\n    public snackBar: MatSnackBar,\n    public dialog: MatDialog,\n    public router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.getUserInfo();\n    this.getFavoriteMovies();\n  }\n\n  /**\n   * call API end-point to get the user's information\n   * @function getUser\n   * @param Username\n   * @return user's data in json format\n   */\n  getUserInfo(): void {\n    const user = localStorage.getItem('user');\n    if (user) {\n      this.fetchApiData.getUser(user).subscribe((resp: User) => {\n        this.user = resp;\n\n        console.log(this.user);\n      });\n    }\n  }\n\n  /**\n   * get user's FavoriteMovies from the user's data\n   */\n  getFavoriteMovies(): void {\n    const user = localStorage.getItem('user');\n    this.fetchApiData.getUser(user).subscribe((resp: any) => {\n      this.FavMovies = resp.FavoriteMovies;\n      console.log(this.FavMovies);\n      return this.FavMovies;\n    });\n  }\n\n  /**\n   * use API end-point to remove user favorite\n   * @function deleteFavoriteMovie\n   * @param MovieId {string}\n   * @param title {string}\n   * @returns updated user's data in json format\n   */\n  removeFavoriteMovie(MovieId: string, title: string): void {\n    this.fetchApiData.deleteFavoriteMovie(MovieId).subscribe((resp: any) => {\n      console.log(resp);\n      this.snackBar.open(\n        `${title} has been removed from your favorites!`,\n        'OK',\n        {\n          duration: 4000,\n        }\n      );\n      this.ngOnInit();\n    });\n  }\n\n  /**\n   * call API end-point to remove the current user\n   * @function deleteUser\n   * @param Username {any}\n   * @return remove status\n   */\n  deleteUser(): void {\n    this.fetchApiData.deleteUser(this.Username).subscribe(() => {\n      this.snackBar.open(`${this.Username} has been removed!`, 'OK', {\n        duration: 4000,\n      });\n      localStorage.clear();\n    });\n    this.router.navigate(['welcome']);\n  }\n\n  /**\n   * open a dialog to edit the user profile\n   * @module EditProfileFormComponent\n   */\n  openEditProfileFormDialog(): void {\n    this.dialog.open(EditProfileFormComponent, {\n      width: '280px',\n    });\n  }\n  /**\n   *open a dialog to display the GenreCardComponent\n   * @param name {string}\n   * @param description {string}\n   */\n  openGenreDialog(name: string, description: string): void {\n    this.dialog.open(GenreCardComponent, {\n      data: { name: name, description: description },\n      width: '300px',\n    });\n  }\n\n  /**\n   * open a dialog to display the DirectorCardComponent\n   * @param name {string}\n   * @param bio {string}\n   * @param birth {string}\n   * @param death {string}\n   */\n  openDirectorDialog(\n    name: string,\n    bio: string,\n    birth: string,\n    death: string\n  ): void {\n    this.dialog.open(DirectorCardComponent, {\n      data: { name: name, bio: bio, birth: birth, death: death },\n      width: '300px',\n    });\n  }\n\n  /**\n   * open a dialog to display the SynopsisCardComponent\n   * @param title {string}\n   * @param description {string}\n   */\n  openSynopsisDialog(title: string, description: string): void {\n    this.dialog.open(SynopsisCardComponent, {\n      data: { title: title, description: description },\n      width: '300px',\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      User's Profile\n    \n    \n    \n      \n        person\n        Username: {{ user.Username }}\n      \n        email \n        Email: {{ user.Email }}\n      \n        cake\n        Birthday: {{ user.Birthday | date }}\n    \n    \n      \n        Edit Profile\n      \n      \n        Delete User\n      \n    \n  \n\n\n\nYour Favorite Movies\n\n  \n    \n      {{ favorite.Title }}\n      \n        Directed by: {{ favorite.Director.Name }}\n      \n    \n    \n      \n    \n    \n      \n        Synopsis\n      \n      \n        Genre\n      \n      \n        Director\n      \n    \n\n    \n      remove_circle\n    \n  \n\n\n    \n\n    \n                \n                    ./user-profile.component.scss\n                \n                .profile-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  padding: 50px;\n}\n\nmat-card {\n  width: 500px;\n  background-color: black;\n  color: white;\n  padding: 30px;\n}\n\nmat-card-header {\n  justify-content: center;\n  color: rgb(161, 7, 7);\n}\n\nmat-card-title {\n  font-size: 27px !important;\n}\n\nmat-card-content {\n  font-size: 16px;\n}\n\nmat-divider {\n  background-color: gray;\n  margin-top: 16px;\n}\n\n.content-container {\n  margin-top: 50px;\n  margin-left: 50px;\n}\n\nmat-icon {\n  margin-right: 10px;\n  color: #d8afa2 !important;\n}\n\n#profile-title {\n  color: rgb(202, 167, 8);\n}\n\nmat-card-actions {\n  display: flex;\n  justify-content: space-evenly;\n  margin-top: 50px;\n}\n\n.edit-btn {\n  color: rgb(202, 167, 8);\n  background-color: black;\n  border: 2px solid rgb(202, 167, 8);\n  transition-duration: 0.2s;\n}\n.edit-btn:hover {\n  background-color: rgb(202, 167, 8);\n  color: black;\n}\n\n.delete-btn {\n  color: rgb(161, 7, 7);\n  background-color: black;\n  border: 2px solid rgb(161, 7, 7);\n  transition-duration: 0.2s;\n}\n.delete-btn:hover {\n  background-color: rgb(161, 7, 7);\n  color: black;\n}\n.user-fav {\n  margin-top: 30px;\n  text-align: center;\n  font-size: 25px;\n}\n.favorites-container {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.favorite-card {\n  margin: 10px;\n  width: 195px;\n  background-color: black;\n}\n\n.img-container {\n  text-align: center;\n  width: 200px;\n  height: 300px;\n  background-color: rgb(218, 216, 216);\n}\n.img-container img {\n  width: 185px;\n  height: 284px;\n  margin: 7px;\n}\n\n.fav-header {\n  justify-content: center;\n  text-align: center;\n  height: 70px;\n}\n.fav-title {\n  font-size: 20px !important;\n  color: #ffffff;\n}\n.fav-subtitle {\n  color: #dadada;\n  font-size: 12px;\n}\n.fav-action {\n  margin-top: 10px;\n  display: flex;\n  height: 10px;\n}\n#fav-action-btn {\n  color: rgb(202, 167, 8) !important;\n}\n.mat-icon-button {\n  position: absolute;\n  right: 3px;\n  top: 3px;\n}\n\n.remove-btn {\n  color: rgb(161, 7, 7) !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            User\\'s Profile                          person        Username: {{ user.Username }}              email         Email: {{ user.Email }}              cake        Birthday: {{ user.Birthday | date }}                      Edit Profile                    Delete User            Your Favorite Movies            {{ favorite.Title }}              Directed by: {{ favorite.Director.Name }}                                          Synopsis                    Genre                    Director                    remove_circle      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserRegistrationFormComponent.html":{"url":"components/UserRegistrationFormComponent.html","title":"component - UserRegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserRegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-registration-form/user-registration-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-registration-form\n            \n\n            \n                styleUrls\n                ./user-registration-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-registration-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: UserRegistrationService, dialogRef: MatDialogRef, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        UserRegistrationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userData\n                    \n                \n                \n                    \n                        Type :         { Username: string; Password: string; Email: string; Birthday: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '', Email: '', Birthday: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/user-registration-form/user-registration-form.component.ts:18\n                            \n                        \n                \n                    \n                        gets input values and stores in userData\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-registration-form/user-registration-form.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-registration-form/user-registration-form.component.ts:34\n                \n            \n\n\n            \n                \n                    call API end-point to register a new user\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        new user's data in json format\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserRegistrationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n// You'll use this import to close the dialog on success\nimport { MatDialogRef } from '@angular/material/dialog';\n// This import brings in the API calls we created in 6.2\nimport { UserRegistrationService } from '../fetch-api-data.service';\n// This import is used to display notifications back to the user\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-user-registration-form',\n  templateUrl: './user-registration-form.component.html',\n  styleUrls: ['./user-registration-form.component.scss'],\n})\nexport class UserRegistrationFormComponent implements OnInit {\n  /**\n   * gets input values and stores in userData\n   */\n  @Input() userData = { Username: '', Password: '', Email: '', Birthday: '' };\n\n  constructor(\n    public fetchApiData: UserRegistrationService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * call API end-point to register a new user\n   * @function userRegistration\n   * @param userData {object}\n   * @return new user's data in json format\n   */\n  registerUser(): void {\n    this.fetchApiData.userRegistration(this.userData).subscribe(\n      (result) => {\n        // logic for a successful user registration goes here! ( To be implement)\n        this.dialogRef.close(); // This will close the modal on success!\n        console.log(result);\n        this.snackBar.open('user registered successfully!', 'OK', {\n          duration: 4000,\n        });\n      },\n      (result) => {\n        this.snackBar.open(result, 'OK', {\n          duration: 4000,\n        });\n      }\n    );\n  }\n}\n\n    \n\n    \n        \n  \n    Sign Up!\n  \n\n  \n    \n      \n      \n        \n      \n\n      \n      \n        \n      \n\n      \n      \n        \n      \n\n      \n      \n        \n      \n    \n  \n\n  \n  \n    \n      Sign Up\n    \n  \n\n\n    \n\n    \n                \n                    ./user-registration-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign Up!                                                                                                                                    Sign Up      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserRegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRegistrationService.html":{"url":"injectables/UserRegistrationService.html","title":"injectable - UserRegistrationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRegistrationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fetch-api-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFavoriteMovie\n                            \n                            \n                                deleteFavoriteMovie\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                    Private\n                                extractResponseData\n                            \n                            \n                                getAllMovies\n                            \n                            \n                                getDirector\n                            \n                            \n                                getFavoriteMovies\n                            \n                            \n                                getGenre\n                            \n                            \n                                getMovie\n                            \n                            \n                                getUser\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                userLogin\n                            \n                            \n                                    Public\n                                userRegistration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/fetch-api-data.service.ts:24\n                            \n                        \n\n                \n                    \n                            Inject the HttpClient module to the constructor params\nThis will provide HttpClient to the entire class, making it available via this.http\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFavoriteMovie\n                        \n                    \n                \n            \n            \n                \naddFavoriteMovie(MovieID: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:148\n                \n            \n\n\n            \n                \n                    call API end-point to add a movie to the user's favorite list\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    MovieID\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        the user's favorite list in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFavoriteMovie\n                        \n                    \n                \n            \n            \n                \ndeleteFavoriteMovie(MovieID: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:192\n                \n            \n\n\n            \n                \n                    call API end-point to delete a user's favorite movie\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    MovieID\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        updated user's information after removed a movie from the list in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(Username: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:178\n                \n            \n\n\n            \n                \n                    call API end-point to delete the current user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Username\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        delete status\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(Username: any, userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:164\n                \n            \n\n\n            \n                \n                    call API end-point to edit the user's informations\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Username\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        updated user's informations in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        extractResponseData\n                        \n                    \n                \n            \n            \n                \n                    \n                    extractResponseData(res: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:207\n                \n            \n\n\n            \n                \n                    Non-typed response extracttion\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        response || empty object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllMovies\n                        \n                    \n                \n            \n            \n                \ngetAllMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:62\n                \n            \n\n\n            \n                \n                    call API end-point to get all movies\n\n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        array of movies object in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirector\n                        \n                    \n                \n            \n            \n                \ngetDirector(Name: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:92\n                \n            \n\n\n            \n                \n                    call API end-point to get a director data by dirctor's name\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a director's data in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavoriteMovies\n                        \n                    \n                \n            \n            \n                \ngetFavoriteMovies(Username: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:134\n                \n            \n\n\n            \n                \n                    call API end-point to get a user's favorite movies list\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Username\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a list of the user's favorite movies in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGenre\n                        \n                    \n                \n            \n            \n                \ngetGenre(Name: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:106\n                \n            \n\n\n            \n                \n                    call API end-point to get a genre data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Name\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a genre data in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMovie\n                        \n                    \n                \n            \n            \n                \ngetMovie(Title: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:77\n                \n            \n\n\n            \n                \n                    call API end-point to get a specific movie by Title\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Title\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a movie object in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(Username: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:120\n                \n            \n\n\n            \n                \n                    call API end-point to get a user's informations\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    Username\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a user's information in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:212\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                    \n                    userLogin(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:50\n                \n            \n\n\n            \n                \n                    call API end-point to log in a user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        user's data in json format\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        userRegistration\n                        \n                    \n                \n            \n            \n                \n                    \n                    userRegistration(userDetails: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/fetch-api-data.service.ts:38\n                \n            \n\n\n            \n                \n                    call API end-point to register a new user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userDetails\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        a new user object in json format\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// Declaring the api url that will provide data for client app\nconst apiUrl = 'https://movie-api-by-tammy.herokuapp.com';\nexport interface User {\n  _id: string;\n  FavoriteMovies: Array;\n  Username: string;\n  Email: string;\n  Birthday: Date;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserRegistrationService {\n  /**\n   * Inject the HttpClient module to the constructor params\n  This will provide HttpClient to the entire class, making it available via this.http\n   * @param http \n   */\n  constructor(private http: HttpClient) {}\n\n  /**\n   * call API end-point to register a new user\n   * @function userRegistration\n   * @param userDetails {any}\n   * @returns a new user object in json format\n   */\n  public userRegistration(userDetails: any): Observable {\n    console.log(userDetails);\n    return this.http\n      .post(apiUrl + '/users', userDetails)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to log in a user\n   * @param userDetails {any}\n   * @returns user's data in json format\n   */\n  public userLogin(userDetails: any): Observable {\n    console.log(userDetails);\n    return this.http\n      .post(apiUrl + '/login', userDetails)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to get all movies\n   * @function getAllMovies\n   * @return array of movies object in json format\n   */\n  getAllMovies(): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/movies', {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to get a specific movie by Title\n   * @function getMovie\n   * @param Title {any}\n   * @returns a movie object in json format\n   */\n  getMovie(Title: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/movies/' + Title, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to get a director data by dirctor's name\n   * @function getDirector\n   * @param Name {any}\n   * @returns a director's data in json format\n   */\n  getDirector(Name: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/directors/' + Name, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to get a genre data\n   * @param Name {any}\n   * @returns a genre data in json format\n   */\n  getGenre(Name: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/genres/' + Name, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to get a user's informations\n   * @param Username {any}\n   * @returns a user's information in json format\n   */\n  getUser(Username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/users/' + Username, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to get a user's favorite movies list\n   * @param Username {any}\n   * @returns a list of the user's favorite movies in json format\n   */\n  getFavoriteMovies(Username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .get(apiUrl + '/users/' + Username + '/movies', {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to add a movie to the user's favorite list\n   * @param MovieID {any}\n   * @returns the user's favorite list in json format\n   */\n  addFavoriteMovie(MovieID: any): Observable {\n    const token = localStorage.getItem('token');\n    const Username = localStorage.getItem('user');\n    return this.http\n      .put(apiUrl + '/users/' + Username + '/movies/' + MovieID, null, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to edit the user's informations\n   * @param Username {any}\n   * @param userDetails {any}\n   * @returns updated user's informations in json format\n   */\n  editUser(Username: any, userDetails: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .put(apiUrl + '/users/' + Username, userDetails, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to delete the current user\n   * @param Username {any}\n   * @returns delete status\n   */\n  deleteUser(Username: any): Observable {\n    const token = localStorage.getItem('token');\n    return this.http\n      .delete(apiUrl + '/users/' + Username, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * call API end-point to delete a user's favorite movie\n   * @param MovieID {any}\n   * @returns updated user's information after removed a movie from the list in json format\n   */\n  deleteFavoriteMovie(MovieID: any): Observable {\n    const Username = localStorage.getItem('user');\n    const token = localStorage.getItem('token');\n    return this.http\n      .delete(apiUrl + '/users/' + Username + '/movies/' + MovieID, {\n        headers: new HttpHeaders({ Authorization: 'Bearer ' + token }),\n      })\n      .pipe(map(this.extractResponseData), catchError(this.handleError));\n  }\n\n  /**\n   * Non-typed response extracttion\n   * @param res {any}\n   * @returns response || empty object\n   */\n  private extractResponseData(res: any): any {\n    const body = res;\n    return body || {};\n  }\n  // handle error\n  private handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Some error occured:', error.error.message);\n    } else {\n      console.error(\n        `Error Status code ${error.status}, ` + `Error body is: ${error.error}`\n      );\n    }\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WelcomePageComponent.html":{"url":"components/WelcomePageComponent.html","title":"component - WelcomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WelcomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/welcome-page/welcome-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-welcome-page\n            \n\n            \n                styleUrls\n                ./welcome-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./welcome-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openUserLoginDialog\n                            \n                            \n                                openUserRegistrationDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/welcome-page/welcome-page.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome-page/welcome-page.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserLoginDialog\n                        \n                    \n                \n            \n            \n                \nopenUserLoginDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome-page/welcome-page.component.ts:29\n                \n            \n\n\n            \n                \n                    open a dialog to display login form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserRegistrationDialog\n                        \n                    \n                \n            \n            \n                \nopenUserRegistrationDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/welcome-page/welcome-page.component.ts:19\n                \n            \n\n\n            \n                \n                    open a dialog to display registration form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/welcome-page/welcome-page.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserLoginFormComponent } from '../user-login-form/user-login-form.component';\nimport { UserRegistrationFormComponent } from '../user-registration-form/user-registration-form.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-welcome-page',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.scss'],\n})\nexport class WelcomePageComponent implements OnInit {\n  constructor(public dialog: MatDialog) {}\n  ngOnInit(): void {}\n\n  /**\n   * open a dialog to display registration form\n   * @module UserRegistrationFormComponent\n   */\n  openUserRegistrationDialog(): void {\n    this.dialog.open(UserRegistrationFormComponent, {\n      width: '280px',\n    });\n  }\n\n  /**\n   * open a dialog to display login form\n   * @module UserLoginFormComponent\n   */\n  openUserLoginDialog(): void {\n    this.dialog.open(UserLoginFormComponent, {\n      width: '280px',\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      Welcome to myFlix\n    \n    \n      \n        Sign Up\n      \n      \n      \n        Login\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./welcome-page.component.scss\n                \n                .welcome-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n}\n.logo {\n  width: 40vw;\n  margin-right: 40px;\n}\nmat-card {\n  margin: 50px;\n  background-color: black;\n  color: white;\n  padding: 80px;\n}\nmat-card-header {\n  justify-content: center;\n  color: rgb(161, 7, 7);\n}\n.content-container {\n  text-align: center;\n}\nmat-card-content {\n  font-size: 18px;\n  margin-top: 40px;\n  justify-content: center;\n}\nmat-card-actions {\n  display: flex;\n  justify-content: space-evenly;\n  margin-top: 60px;\n}\n\n.mat-stroked-button {\n  border: 3px solid rgb(202, 167, 8);\n  color: rgb(202, 167, 8);\n  width: 15vw;\n  transition-duration: 0.2s;\n}\n.mat-stroked-button:hover {\n  background-color: rgb(202, 167, 8);\n  color: black;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Welcome to myFlix                      Sign Up                          Login            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'DirectorCardComponent', 'selector': 'app-director-card'},{'name': 'EditProfileFormComponent', 'selector': 'app-edit-profile-form'},{'name': 'GenreCardComponent', 'selector': 'app-genre-card'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'SynopsisCardComponent', 'selector': 'app-synopsis-card'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WelcomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/director-card/director-card.component.ts\n            \n            component\n            DirectorCardComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/edit-profile-form/edit-profile-form.component.ts\n            \n            component\n            EditProfileFormComponent\n            \n                27 %\n                (3/11)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            injectable\n            UserRegistrationService\n            \n                87 %\n                (14/16)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            variable\n            apiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/genre-card/genre-card.component.ts\n            \n            component\n            GenreCardComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/movie-card/movie-card.component.ts\n            \n            component\n            MovieCardComponent\n            \n                50 %\n                (9/18)\n            \n        \n        \n            \n                \n                src/app/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/synopsis-card/synopsis-card.component.ts\n            \n            component\n            SynopsisCardComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/user-login-form/user-login-form.component.ts\n            \n            component\n            UserLoginFormComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                44 %\n                (8/18)\n            \n        \n        \n            \n                \n                src/app/user-registration-form/user-registration-form.component.ts\n            \n            component\n            UserRegistrationFormComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/welcome-page/welcome-page.component.ts\n            \n            component\n            WelcomePageComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~13.1.0\n        \n            @angular/cdk : ^13.1.2\n        \n            @angular/common : ~13.1.0\n        \n            @angular/compiler : ~13.1.0\n        \n            @angular/core : ~13.1.0\n        \n            @angular/flex-layout : ^13.0.0-beta.36\n        \n            @angular/forms : ~13.1.0\n        \n            @angular/material : ^13.1.2\n        \n            @angular/platform-browser : ~13.1.0\n        \n            @angular/platform-browser-dynamic : ~13.1.0\n        \n            @angular/router : ~13.1.0\n        \n            angular-bootstrap-md : ^4.3.2\n        \n            rxjs : ~7.4.0\n        \n            tslib : ^2.3.0\n        \n            typedoc : ^0.22.11\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMyFlixAngularClient\nThis project was generated with Angular CLI version 13.1.3.\nObjective\nUsing Angular, built the client-side for an application called myFlix based on its existing server-side code (REST API and database), with supporting documentation.\nKey Features\n\nThe app should display a welcome view where users will be able to either log in or register an\naccount.\nOnce authenticated, the user should now view all movies.\nUpon clicking on a particular movie, users will be taken to a single movie view, where\nadditional movie details will be displayed. The single movie view will contain the following\nadditional features:\nA button that when clicked takes a user to the director view, where details about the\ndirector of that particular movie will be displayed.\nA button that when clicked takes a user to the genre view, where details about that\nparticular genre of the movie will be displayed.\n\n\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nDirectorCardComponent\n\nDirectorCardComponent\n\nAppModule -->\n\nDirectorCardComponent->AppModule\n\n\n\n\n\nEditProfileFormComponent\n\nEditProfileFormComponent\n\nAppModule -->\n\nEditProfileFormComponent->AppModule\n\n\n\n\n\nGenreCardComponent\n\nGenreCardComponent\n\nAppModule -->\n\nGenreCardComponent->AppModule\n\n\n\n\n\nMovieCardComponent\n\nMovieCardComponent\n\nAppModule -->\n\nMovieCardComponent->AppModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nAppModule -->\n\nNavigationComponent->AppModule\n\n\n\n\n\nSynopsisCardComponent\n\nSynopsisCardComponent\n\nAppModule -->\n\nSynopsisCardComponent->AppModule\n\n\n\n\n\nUserLoginFormComponent\n\nUserLoginFormComponent\n\nAppModule -->\n\nUserLoginFormComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserRegistrationFormComponent\n\nUserRegistrationFormComponent\n\nAppModule -->\n\nUserRegistrationFormComponent->AppModule\n\n\n\n\n\nWelcomePageComponent\n\nWelcomePageComponent\n\nAppModule -->\n\nWelcomePageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiUrl   (src/.../fetch-api-data.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/fetch-api-data.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://movie-api-by-tammy.herokuapp.com'\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
